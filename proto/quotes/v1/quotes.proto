syntax = "proto3";

package quotes.v1;

import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "validate/validate.proto";

option go_package = "grpc-api/api/quotes/v1;v1";
option java_multiple_files = true;
option java_package = "dev.kratos.api.quotes.v1";
option java_outer_classname = "QuotesProtoV1";

service Quotes {
  rpc Search (QuotesRequest) returns (QuotesReply)  {
    option (google.api.http) = {
      post: "/v1/quotes"
      body: "*"
    };
  }

	rpc Health (google.protobuf.Empty) returns (google.protobuf.Empty)  {
    option (google.api.http) = {
      get: "/healthz"
    };
  }
}

// 
// Request
// 

enum TSDB {
  Companies = 0;
  Currencies = 1;
  Industries = 2;
  Exchanges = 3;
  Countries = 4;
  Indexes = 5;
  Accounts = 6;
}

enum Interval {
  d = 0;
  w = 1;
  m = 2;
  y = 3;
}

enum Indicator {
  Macd = 0;
  Rsi = 1;
  Obv = 2;
  Adx = 3;
  Beta = 4;
  Atr = 5;
  Bband = 6;
  Ema = 7;
  LinearReg = 8;
  WillR = 9;
  StdDev = 10;
  Sma10 = 11;
  Sma20 = 12;
  Sma50 = 13;
  Sma100 = 14;
  Sma200 = 15;
}

enum Operator {
	Equal = 0;
	Greater = 1;
	GreaterEqual = 2;
	Less = 3;
	LessEqual = 4;
}

enum Argument {
	Ticker = 0;
	Exchange = 1;
  Industry = 2;
  Index = 3;
  Country = 4;
  Currency = 5;
  Time = 6;
}

message Filter {
	Operator operator = 1 [(validate.rules).enum = {defined_only: true}];
	Argument argument = 2 [(validate.rules).enum = {defined_only: true}];
	string value = 3;
}

message QuotesRequest {
  TSDB tsdb = 1 [(validate.rules).enum = {defined_only: true}];
  Interval interval = 2 [(validate.rules).enum = {defined_only: true}];
	repeated Filter filters = 3 [(validate.rules).repeated.min_items = 1, (validate.rules).repeated.max_items = 20];
}


// 
// Reply
// 

message QuotesReply {
	repeated float open = 1;
	repeated float close = 2;
	repeated float low = 3;
	repeated float high = 4;
	repeated float volume = 5;
	repeated google.protobuf.Timestamp date = 7;
}