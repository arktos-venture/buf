// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.4
// source: proto/quotes/v1/quotes.proto

package quotes_v1

import (
	v1 "github.com/arktos-venture/buf/proto/screener/v1"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TSDB int32

const (
	TSDB_Companies TSDB = 0
	TSDB_Forexes   TSDB = 1
	TSDB_Indices   TSDB = 2
	TSDB_Indexes   TSDB = 3
	TSDB_Accounts  TSDB = 4
)

// Enum value maps for TSDB.
var (
	TSDB_name = map[int32]string{
		0: "Companies",
		1: "Forexes",
		2: "Indices",
		3: "Indexes",
		4: "Accounts",
	}
	TSDB_value = map[string]int32{
		"Companies": 0,
		"Forexes":   1,
		"Indices":   2,
		"Indexes":   3,
		"Accounts":  4,
	}
)

func (x TSDB) Enum() *TSDB {
	p := new(TSDB)
	*p = x
	return p
}

func (x TSDB) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TSDB) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_quotes_v1_quotes_proto_enumTypes[0].Descriptor()
}

func (TSDB) Type() protoreflect.EnumType {
	return &file_proto_quotes_v1_quotes_proto_enumTypes[0]
}

func (x TSDB) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TSDB.Descriptor instead.
func (TSDB) EnumDescriptor() ([]byte, []int) {
	return file_proto_quotes_v1_quotes_proto_rawDescGZIP(), []int{0}
}

type Interval int32

const (
	Interval_d Interval = 0
	Interval_w Interval = 1
	Interval_m Interval = 2
	Interval_q Interval = 3
	Interval_y Interval = 4
)

// Enum value maps for Interval.
var (
	Interval_name = map[int32]string{
		0: "d",
		1: "w",
		2: "m",
		3: "q",
		4: "y",
	}
	Interval_value = map[string]int32{
		"d": 0,
		"w": 1,
		"m": 2,
		"q": 3,
		"y": 4,
	}
)

func (x Interval) Enum() *Interval {
	p := new(Interval)
	*p = x
	return p
}

func (x Interval) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Interval) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_quotes_v1_quotes_proto_enumTypes[1].Descriptor()
}

func (Interval) Type() protoreflect.EnumType {
	return &file_proto_quotes_v1_quotes_proto_enumTypes[1]
}

func (x Interval) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Interval.Descriptor instead.
func (Interval) EnumDescriptor() ([]byte, []int) {
	return file_proto_quotes_v1_quotes_proto_rawDescGZIP(), []int{1}
}

type QuoteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tsdb     TSDB         `protobuf:"varint,1,opt,name=tsdb,proto3,enum=quotes.v1.TSDB" json:"tsdb,omitempty"`
	Interval Interval     `protobuf:"varint,2,opt,name=interval,proto3,enum=quotes.v1.Interval" json:"interval,omitempty"`
	Filters  []*v1.Filter `protobuf:"bytes,3,rep,name=filters,proto3" json:"filters,omitempty"`
}

func (x *QuoteRequest) Reset() {
	*x = QuoteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_quotes_v1_quotes_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuoteRequest) ProtoMessage() {}

func (x *QuoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_quotes_v1_quotes_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuoteRequest.ProtoReflect.Descriptor instead.
func (*QuoteRequest) Descriptor() ([]byte, []int) {
	return file_proto_quotes_v1_quotes_proto_rawDescGZIP(), []int{0}
}

func (x *QuoteRequest) GetTsdb() TSDB {
	if x != nil {
		return x.Tsdb
	}
	return TSDB_Companies
}

func (x *QuoteRequest) GetInterval() Interval {
	if x != nil {
		return x.Interval
	}
	return Interval_d
}

func (x *QuoteRequest) GetFilters() []*v1.Filter {
	if x != nil {
		return x.Filters
	}
	return nil
}

type QuoteLastRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tsdb     TSDB   `protobuf:"varint,1,opt,name=tsdb,proto3,enum=quotes.v1.TSDB" json:"tsdb,omitempty"`
	Exchange string `protobuf:"bytes,2,opt,name=exchange,proto3" json:"exchange,omitempty"`
	Ticker   string `protobuf:"bytes,3,opt,name=ticker,proto3" json:"ticker,omitempty"`
}

func (x *QuoteLastRequest) Reset() {
	*x = QuoteLastRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_quotes_v1_quotes_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuoteLastRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuoteLastRequest) ProtoMessage() {}

func (x *QuoteLastRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_quotes_v1_quotes_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuoteLastRequest.ProtoReflect.Descriptor instead.
func (*QuoteLastRequest) Descriptor() ([]byte, []int) {
	return file_proto_quotes_v1_quotes_proto_rawDescGZIP(), []int{1}
}

func (x *QuoteLastRequest) GetTsdb() TSDB {
	if x != nil {
		return x.Tsdb
	}
	return TSDB_Companies
}

func (x *QuoteLastRequest) GetExchange() string {
	if x != nil {
		return x.Exchange
	}
	return ""
}

func (x *QuoteLastRequest) GetTicker() string {
	if x != nil {
		return x.Ticker
	}
	return ""
}

type QuoteDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tsdb      TSDB     `protobuf:"varint,1,opt,name=tsdb,proto3,enum=quotes.v1.TSDB" json:"tsdb,omitempty"`
	Exchanges []string `protobuf:"bytes,2,rep,name=exchanges,proto3" json:"exchanges,omitempty"`
	Tickers   []string `protobuf:"bytes,3,rep,name=tickers,proto3" json:"tickers,omitempty"`
}

func (x *QuoteDeleteRequest) Reset() {
	*x = QuoteDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_quotes_v1_quotes_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuoteDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuoteDeleteRequest) ProtoMessage() {}

func (x *QuoteDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_quotes_v1_quotes_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuoteDeleteRequest.ProtoReflect.Descriptor instead.
func (*QuoteDeleteRequest) Descriptor() ([]byte, []int) {
	return file_proto_quotes_v1_quotes_proto_rawDescGZIP(), []int{2}
}

func (x *QuoteDeleteRequest) GetTsdb() TSDB {
	if x != nil {
		return x.Tsdb
	}
	return TSDB_Companies
}

func (x *QuoteDeleteRequest) GetExchanges() []string {
	if x != nil {
		return x.Exchanges
	}
	return nil
}

func (x *QuoteDeleteRequest) GetTickers() []string {
	if x != nil {
		return x.Tickers
	}
	return nil
}

type QuoteReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Open      []float32                `protobuf:"fixed32,1,rep,packed,name=open,proto3" json:"open,omitempty"`
	Close     []float32                `protobuf:"fixed32,2,rep,packed,name=close,proto3" json:"close,omitempty"`
	Low       []float32                `protobuf:"fixed32,3,rep,packed,name=low,proto3" json:"low,omitempty"`
	High      []float32                `protobuf:"fixed32,4,rep,packed,name=high,proto3" json:"high,omitempty"`
	Volume    []float32                `protobuf:"fixed32,5,rep,packed,name=volume,proto3" json:"volume,omitempty"`
	CreatedAt []*timestamppb.Timestamp `protobuf:"bytes,7,rep,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *QuoteReply) Reset() {
	*x = QuoteReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_quotes_v1_quotes_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuoteReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuoteReply) ProtoMessage() {}

func (x *QuoteReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_quotes_v1_quotes_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuoteReply.ProtoReflect.Descriptor instead.
func (*QuoteReply) Descriptor() ([]byte, []int) {
	return file_proto_quotes_v1_quotes_proto_rawDescGZIP(), []int{3}
}

func (x *QuoteReply) GetOpen() []float32 {
	if x != nil {
		return x.Open
	}
	return nil
}

func (x *QuoteReply) GetClose() []float32 {
	if x != nil {
		return x.Close
	}
	return nil
}

func (x *QuoteReply) GetLow() []float32 {
	if x != nil {
		return x.Low
	}
	return nil
}

func (x *QuoteReply) GetHigh() []float32 {
	if x != nil {
		return x.High
	}
	return nil
}

func (x *QuoteReply) GetVolume() []float32 {
	if x != nil {
		return x.Volume
	}
	return nil
}

func (x *QuoteReply) GetCreatedAt() []*timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type QuoteLastReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Open      float32                `protobuf:"fixed32,1,opt,name=open,proto3" json:"open,omitempty"`
	Close     float32                `protobuf:"fixed32,2,opt,name=close,proto3" json:"close,omitempty"`
	Low       float32                `protobuf:"fixed32,3,opt,name=low,proto3" json:"low,omitempty"`
	High      float32                `protobuf:"fixed32,4,opt,name=high,proto3" json:"high,omitempty"`
	Volume    float32                `protobuf:"fixed32,5,opt,name=volume,proto3" json:"volume,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *QuoteLastReply) Reset() {
	*x = QuoteLastReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_quotes_v1_quotes_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuoteLastReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuoteLastReply) ProtoMessage() {}

func (x *QuoteLastReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_quotes_v1_quotes_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuoteLastReply.ProtoReflect.Descriptor instead.
func (*QuoteLastReply) Descriptor() ([]byte, []int) {
	return file_proto_quotes_v1_quotes_proto_rawDescGZIP(), []int{4}
}

func (x *QuoteLastReply) GetOpen() float32 {
	if x != nil {
		return x.Open
	}
	return 0
}

func (x *QuoteLastReply) GetClose() float32 {
	if x != nil {
		return x.Close
	}
	return 0
}

func (x *QuoteLastReply) GetLow() float32 {
	if x != nil {
		return x.Low
	}
	return 0
}

func (x *QuoteLastReply) GetHigh() float32 {
	if x != nil {
		return x.High
	}
	return 0
}

func (x *QuoteLastReply) GetVolume() float32 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *QuoteLastReply) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type QuoteDelete struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *QuoteDelete) Reset() {
	*x = QuoteDelete{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_quotes_v1_quotes_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuoteDelete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuoteDelete) ProtoMessage() {}

func (x *QuoteDelete) ProtoReflect() protoreflect.Message {
	mi := &file_proto_quotes_v1_quotes_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuoteDelete.ProtoReflect.Descriptor instead.
func (*QuoteDelete) Descriptor() ([]byte, []int) {
	return file_proto_quotes_v1_quotes_proto_rawDescGZIP(), []int{5}
}

func (x *QuoteDelete) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

var File_proto_quotes_v1_quotes_proto protoreflect.FileDescriptor

var file_proto_quotes_v1_quotes_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x73, 0x2f, 0x76,
	0x31, 0x2f, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09,
	0x71, 0x75, 0x6f, 0x74, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70,
	0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x20, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x65,
	0x72, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xb9, 0x01, 0x0a, 0x0c, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x04, 0x74, 0x73, 0x64, 0x62, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54,
	0x53, 0x44, 0x42, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x82, 0x01, 0x02, 0x10, 0x01, 0x52, 0x04, 0x74,
	0x73, 0x64, 0x62, 0x12, 0x39, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x82,
	0x01, 0x02, 0x10, 0x01, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x3f,
	0x0a, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x42, 0x10, 0xfa, 0x42, 0x05, 0x92, 0x01, 0x02, 0x08, 0x01, 0xfa, 0x42,
	0x05, 0x92, 0x01, 0x02, 0x10, 0x14, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x22,
	0x75, 0x0a, 0x10, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x4c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x04, 0x74, 0x73, 0x64, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0f, 0x2e, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x53,
	0x44, 0x42, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x82, 0x01, 0x02, 0x10, 0x01, 0x52, 0x04, 0x74, 0x73,
	0x64, 0x62, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x22, 0x7b, 0x0a, 0x12, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x04,
	0x74, 0x73, 0x64, 0x62, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x71, 0x75, 0x6f,
	0x74, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x53, 0x44, 0x42, 0x42, 0x08, 0xfa, 0x42, 0x05,
	0x82, 0x01, 0x02, 0x10, 0x01, 0x52, 0x04, 0x74, 0x73, 0x64, 0x62, 0x12, 0x1c, 0x0a, 0x09, 0x65,
	0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09,
	0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x63,
	0x6b, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x74, 0x69, 0x63, 0x6b,
	0x65, 0x72, 0x73, 0x22, 0xaf, 0x01, 0x0a, 0x0a, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x02,
	0x52, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x02, 0x52, 0x05, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6c, 0x6f, 0x77, 0x18, 0x03, 0x20, 0x03, 0x28, 0x02, 0x52, 0x03, 0x6c, 0x6f, 0x77, 0x12, 0x12,
	0x0a, 0x04, 0x68, 0x69, 0x67, 0x68, 0x18, 0x04, 0x20, 0x03, 0x28, 0x02, 0x52, 0x04, 0x68, 0x69,
	0x67, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x02, 0x52, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xb3, 0x01, 0x0a, 0x0e, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x4c,
	0x61, 0x73, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6f, 0x70, 0x65, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x6f, 0x70, 0x65, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6c, 0x6f, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x63, 0x6c, 0x6f,
	0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6f, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x03, 0x6c, 0x6f, 0x77, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x69, 0x67, 0x68, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x04, 0x68, 0x69, 0x67, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x23, 0x0a, 0x0b, 0x51,
	0x75, 0x6f, 0x74, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x2a, 0x4a, 0x0a, 0x04, 0x54, 0x53, 0x44, 0x42, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x69, 0x65, 0x73, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x46, 0x6f, 0x72, 0x65, 0x78,
	0x65, 0x73, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x65, 0x73, 0x10,
	0x02, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x10, 0x03, 0x12, 0x0c,
	0x0a, 0x08, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x10, 0x04, 0x2a, 0x2d, 0x0a, 0x08,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x05, 0x0a, 0x01, 0x64, 0x10, 0x00, 0x12,
	0x05, 0x0a, 0x01, 0x77, 0x10, 0x01, 0x12, 0x05, 0x0a, 0x01, 0x6d, 0x10, 0x02, 0x12, 0x05, 0x0a,
	0x01, 0x71, 0x10, 0x03, 0x12, 0x05, 0x0a, 0x01, 0x79, 0x10, 0x04, 0x32, 0x96, 0x02, 0x0a, 0x06,
	0x51, 0x75, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x66, 0x0a, 0x04, 0x4c, 0x61, 0x73, 0x74, 0x12, 0x1b,
	0x2e, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x6f, 0x74, 0x65,
	0x4c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x71, 0x75,
	0x6f, 0x74, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x4c, 0x61, 0x73,
	0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x12, 0x1e,
	0x2f, 0x76, 0x31, 0x2f, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x73, 0x2f, 0x7b, 0x65, 0x78, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x7d, 0x2f, 0x7b, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x7d, 0x12, 0x4f,
	0x0a, 0x06, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x17, 0x2e, 0x71, 0x75, 0x6f, 0x74, 0x65,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x15, 0x2e, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75,
	0x6f, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x15, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0f,
	0x22, 0x0a, 0x2f, 0x76, 0x31, 0x2f, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x73, 0x3a, 0x01, 0x2a, 0x12,
	0x53, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1d, 0x2e, 0x71, 0x75, 0x6f, 0x74,
	0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x71, 0x75, 0x6f, 0x74, 0x65,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x22, 0x12, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0c, 0x2a, 0x0a, 0x2f, 0x76, 0x31, 0x2f, 0x71, 0x75,
	0x6f, 0x74, 0x65, 0x73, 0x42, 0xfb, 0x02, 0x0a, 0x18, 0x64, 0x65, 0x76, 0x2e, 0x6b, 0x72, 0x61,
	0x74, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x73, 0x2e, 0x76,
	0x31, 0x42, 0x10, 0x41, 0x50, 0x49, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x73, 0x50, 0x72, 0x6f, 0x74,
	0x6f, 0x56, 0x31, 0x50, 0x01, 0x5a, 0x37, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x61, 0x72, 0x6b, 0x74, 0x6f, 0x73, 0x2d, 0x76, 0x65, 0x6e, 0x74, 0x75, 0x72, 0x65,
	0x2f, 0x62, 0x75, 0x66, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x71, 0x75, 0x6f, 0x74, 0x65,
	0x73, 0x2f, 0x76, 0x31, 0x3b, 0x71, 0x75, 0x6f, 0x74, 0x65, 0x73, 0x5f, 0x76, 0x31, 0x92, 0x41,
	0x90, 0x02, 0x12, 0x7d, 0x0a, 0x0b, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x73, 0x20, 0x41, 0x50, 0x49,
	0x73, 0x12, 0x0b, 0x51, 0x75, 0x6f, 0x74, 0x65, 0x73, 0x20, 0x41, 0x50, 0x49, 0x73, 0x22, 0x5c,
	0x0a, 0x16, 0x41, 0x72, 0x6b, 0x74, 0x6f, 0x73, 0x20, 0x56, 0x65, 0x6e, 0x74, 0x75, 0x72, 0x65,
	0x20, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x25, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a,
	0x2f, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x72, 0x6b,
	0x74, 0x6f, 0x73, 0x2d, 0x76, 0x65, 0x6e, 0x74, 0x75, 0x72, 0x65, 0x2f, 0x62, 0x75, 0x66, 0x1a,
	0x1b, 0x6f, 0x73, 0x73, 0x40, 0x61, 0x72, 0x6b, 0x74, 0x6f, 0x73, 0x2d, 0x63, 0x6f, 0x6e, 0x73,
	0x75, 0x6c, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x32, 0x03, 0x31, 0x2e,
	0x30, 0x2a, 0x02, 0x01, 0x02, 0x32, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x5a, 0x59, 0x0a, 0x57, 0x0a, 0x06, 0x62,
	0x65, 0x61, 0x72, 0x65, 0x72, 0x12, 0x4d, 0x08, 0x02, 0x12, 0x38, 0x41, 0x75, 0x74, 0x68, 0x65,
	0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2c,
	0x20, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x65, 0x64, 0x20, 0x62, 0x79, 0x20, 0x42, 0x65, 0x61,
	0x72, 0x65, 0x72, 0x3a, 0x20, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x20, 0x3c, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x3e, 0x1a, 0x0d, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x20, 0x02, 0x62, 0x0c, 0x0a, 0x0a, 0x0a, 0x06, 0x62, 0x65, 0x61, 0x72, 0x65, 0x72,
	0x12, 0x00, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_quotes_v1_quotes_proto_rawDescOnce sync.Once
	file_proto_quotes_v1_quotes_proto_rawDescData = file_proto_quotes_v1_quotes_proto_rawDesc
)

func file_proto_quotes_v1_quotes_proto_rawDescGZIP() []byte {
	file_proto_quotes_v1_quotes_proto_rawDescOnce.Do(func() {
		file_proto_quotes_v1_quotes_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_quotes_v1_quotes_proto_rawDescData)
	})
	return file_proto_quotes_v1_quotes_proto_rawDescData
}

var file_proto_quotes_v1_quotes_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_proto_quotes_v1_quotes_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_proto_quotes_v1_quotes_proto_goTypes = []interface{}{
	(TSDB)(0),                     // 0: quotes.v1.TSDB
	(Interval)(0),                 // 1: quotes.v1.Interval
	(*QuoteRequest)(nil),          // 2: quotes.v1.QuoteRequest
	(*QuoteLastRequest)(nil),      // 3: quotes.v1.QuoteLastRequest
	(*QuoteDeleteRequest)(nil),    // 4: quotes.v1.QuoteDeleteRequest
	(*QuoteReply)(nil),            // 5: quotes.v1.QuoteReply
	(*QuoteLastReply)(nil),        // 6: quotes.v1.QuoteLastReply
	(*QuoteDelete)(nil),           // 7: quotes.v1.QuoteDelete
	(*v1.Filter)(nil),             // 8: screener.v1.Filter
	(*timestamppb.Timestamp)(nil), // 9: google.protobuf.Timestamp
}
var file_proto_quotes_v1_quotes_proto_depIdxs = []int32{
	0,  // 0: quotes.v1.QuoteRequest.tsdb:type_name -> quotes.v1.TSDB
	1,  // 1: quotes.v1.QuoteRequest.interval:type_name -> quotes.v1.Interval
	8,  // 2: quotes.v1.QuoteRequest.filters:type_name -> screener.v1.Filter
	0,  // 3: quotes.v1.QuoteLastRequest.tsdb:type_name -> quotes.v1.TSDB
	0,  // 4: quotes.v1.QuoteDeleteRequest.tsdb:type_name -> quotes.v1.TSDB
	9,  // 5: quotes.v1.QuoteReply.created_at:type_name -> google.protobuf.Timestamp
	9,  // 6: quotes.v1.QuoteLastReply.created_at:type_name -> google.protobuf.Timestamp
	3,  // 7: quotes.v1.Quotes.Last:input_type -> quotes.v1.QuoteLastRequest
	2,  // 8: quotes.v1.Quotes.Search:input_type -> quotes.v1.QuoteRequest
	4,  // 9: quotes.v1.Quotes.Delete:input_type -> quotes.v1.QuoteDeleteRequest
	6,  // 10: quotes.v1.Quotes.Last:output_type -> quotes.v1.QuoteLastReply
	5,  // 11: quotes.v1.Quotes.Search:output_type -> quotes.v1.QuoteReply
	7,  // 12: quotes.v1.Quotes.Delete:output_type -> quotes.v1.QuoteDelete
	10, // [10:13] is the sub-list for method output_type
	7,  // [7:10] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_proto_quotes_v1_quotes_proto_init() }
func file_proto_quotes_v1_quotes_proto_init() {
	if File_proto_quotes_v1_quotes_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_quotes_v1_quotes_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuoteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_quotes_v1_quotes_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuoteLastRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_quotes_v1_quotes_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuoteDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_quotes_v1_quotes_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuoteReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_quotes_v1_quotes_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuoteLastReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_quotes_v1_quotes_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuoteDelete); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_quotes_v1_quotes_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_quotes_v1_quotes_proto_goTypes,
		DependencyIndexes: file_proto_quotes_v1_quotes_proto_depIdxs,
		EnumInfos:         file_proto_quotes_v1_quotes_proto_enumTypes,
		MessageInfos:      file_proto_quotes_v1_quotes_proto_msgTypes,
	}.Build()
	File_proto_quotes_v1_quotes_proto = out.File
	file_proto_quotes_v1_quotes_proto_rawDesc = nil
	file_proto_quotes_v1_quotes_proto_goTypes = nil
	file_proto_quotes_v1_quotes_proto_depIdxs = nil
}
