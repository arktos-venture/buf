// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.21.4
// source: proto/portfolios/v1/portfolios.proto

package v1Portfolios

import (
	v11 "github.com/arktos-venture/buf/proto/exchanges/v1"
	v12 "github.com/arktos-venture/buf/proto/orders/v1"
	v1 "github.com/arktos-venture/buf/proto/screener/v1"
	v13 "github.com/arktos-venture/buf/proto/strategies/v1"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PortfolioRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account  string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Currency string `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
}

func (x *PortfolioRequest) Reset() {
	*x = PortfolioRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_portfolios_v1_portfolios_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortfolioRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortfolioRequest) ProtoMessage() {}

func (x *PortfolioRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_portfolios_v1_portfolios_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortfolioRequest.ProtoReflect.Descriptor instead.
func (*PortfolioRequest) Descriptor() ([]byte, []int) {
	return file_proto_portfolios_v1_portfolios_proto_rawDescGZIP(), []int{0}
}

func (x *PortfolioRequest) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *PortfolioRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

type PortfolioSearchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account    string   `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Currencies []string `protobuf:"bytes,2,rep,name=currencies,proto3" json:"currencies,omitempty"`
}

func (x *PortfolioSearchRequest) Reset() {
	*x = PortfolioSearchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_portfolios_v1_portfolios_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortfolioSearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortfolioSearchRequest) ProtoMessage() {}

func (x *PortfolioSearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_portfolios_v1_portfolios_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortfolioSearchRequest.ProtoReflect.Descriptor instead.
func (*PortfolioSearchRequest) Descriptor() ([]byte, []int) {
	return file_proto_portfolios_v1_portfolios_proto_rawDescGZIP(), []int{1}
}

func (x *PortfolioSearchRequest) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *PortfolioSearchRequest) GetCurrencies() []string {
	if x != nil {
		return x.Currencies
	}
	return nil
}

type PortfolioReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Currency      string                        `protobuf:"bytes,1,opt,name=currency,proto3" json:"currency,omitempty"`
	Size          float32                       `protobuf:"fixed32,2,opt,name=size,proto3" json:"size,omitempty"`
	AllowedAssets []v1.Asset                    `protobuf:"varint,3,rep,packed,name=allowed_assets,json=allowedAssets,proto3,enum=screener.v1.Asset" json:"allowed_assets,omitempty"`
	Exchanges     []*v11.ExchangeReplies_Result `protobuf:"bytes,4,rep,name=exchanges,proto3" json:"exchanges,omitempty"`
	Positions     []*v12.PositionReplies_Result `protobuf:"bytes,5,rep,name=positions,proto3" json:"positions,omitempty"`
	Orders        []*v12.OrderReply             `protobuf:"bytes,6,rep,name=orders,proto3" json:"orders,omitempty"`
	CreatedAt     *timestamppb.Timestamp        `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp        `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *PortfolioReply) Reset() {
	*x = PortfolioReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_portfolios_v1_portfolios_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortfolioReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortfolioReply) ProtoMessage() {}

func (x *PortfolioReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_portfolios_v1_portfolios_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortfolioReply.ProtoReflect.Descriptor instead.
func (*PortfolioReply) Descriptor() ([]byte, []int) {
	return file_proto_portfolios_v1_portfolios_proto_rawDescGZIP(), []int{2}
}

func (x *PortfolioReply) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *PortfolioReply) GetSize() float32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *PortfolioReply) GetAllowedAssets() []v1.Asset {
	if x != nil {
		return x.AllowedAssets
	}
	return nil
}

func (x *PortfolioReply) GetExchanges() []*v11.ExchangeReplies_Result {
	if x != nil {
		return x.Exchanges
	}
	return nil
}

func (x *PortfolioReply) GetPositions() []*v12.PositionReplies_Result {
	if x != nil {
		return x.Positions
	}
	return nil
}

func (x *PortfolioReply) GetOrders() []*v12.OrderReply {
	if x != nil {
		return x.Orders
	}
	return nil
}

func (x *PortfolioReply) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *PortfolioReply) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type PortfolioStatsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Price     *PortfolioStatsReply_Price  `protobuf:"bytes,1,opt,name=price,proto3" json:"price,omitempty"`
	Volume    *PortfolioStatsReply_Volume `protobuf:"bytes,2,opt,name=volume,proto3" json:"volume,omitempty"`
	CreatedAt *timestamppb.Timestamp      `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt *timestamppb.Timestamp      `protobuf:"bytes,4,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *PortfolioStatsReply) Reset() {
	*x = PortfolioStatsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_portfolios_v1_portfolios_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortfolioStatsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortfolioStatsReply) ProtoMessage() {}

func (x *PortfolioStatsReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_portfolios_v1_portfolios_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortfolioStatsReply.ProtoReflect.Descriptor instead.
func (*PortfolioStatsReply) Descriptor() ([]byte, []int) {
	return file_proto_portfolios_v1_portfolios_proto_rawDescGZIP(), []int{3}
}

func (x *PortfolioStatsReply) GetPrice() *PortfolioStatsReply_Price {
	if x != nil {
		return x.Price
	}
	return nil
}

func (x *PortfolioStatsReply) GetVolume() *PortfolioStatsReply_Volume {
	if x != nil {
		return x.Volume
	}
	return nil
}

func (x *PortfolioStatsReply) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *PortfolioStatsReply) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type PortfolioReplies struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*PortfolioReplies_Result `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Total   int64                      `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *PortfolioReplies) Reset() {
	*x = PortfolioReplies{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_portfolios_v1_portfolios_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortfolioReplies) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortfolioReplies) ProtoMessage() {}

func (x *PortfolioReplies) ProtoReflect() protoreflect.Message {
	mi := &file_proto_portfolios_v1_portfolios_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortfolioReplies.ProtoReflect.Descriptor instead.
func (*PortfolioReplies) Descriptor() ([]byte, []int) {
	return file_proto_portfolios_v1_portfolios_proto_rawDescGZIP(), []int{4}
}

func (x *PortfolioReplies) GetResults() []*PortfolioReplies_Result {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *PortfolioReplies) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type PortfolioStatsReply_Price struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MaxAnnual  float32 `protobuf:"fixed32,1,opt,name=max_annual,json=maxAnnual,proto3" json:"max_annual,omitempty"`
	MinAnnual  float32 `protobuf:"fixed32,2,opt,name=min_annual,json=minAnnual,proto3" json:"min_annual,omitempty"`
	ReturnYear float32 `protobuf:"fixed32,3,opt,name=return_year,json=returnYear,proto3" json:"return_year,omitempty"`
	MarketCap  int64   `protobuf:"varint,4,opt,name=market_cap,json=marketCap,proto3" json:"market_cap,omitempty"`
	Beta5Y     float32 `protobuf:"fixed32,5,opt,name=beta5y,proto3" json:"beta5y,omitempty"`
	Start      float32 `protobuf:"fixed32,6,opt,name=start,proto3" json:"start,omitempty"`
}

func (x *PortfolioStatsReply_Price) Reset() {
	*x = PortfolioStatsReply_Price{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_portfolios_v1_portfolios_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortfolioStatsReply_Price) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortfolioStatsReply_Price) ProtoMessage() {}

func (x *PortfolioStatsReply_Price) ProtoReflect() protoreflect.Message {
	mi := &file_proto_portfolios_v1_portfolios_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortfolioStatsReply_Price.ProtoReflect.Descriptor instead.
func (*PortfolioStatsReply_Price) Descriptor() ([]byte, []int) {
	return file_proto_portfolios_v1_portfolios_proto_rawDescGZIP(), []int{3, 0}
}

func (x *PortfolioStatsReply_Price) GetMaxAnnual() float32 {
	if x != nil {
		return x.MaxAnnual
	}
	return 0
}

func (x *PortfolioStatsReply_Price) GetMinAnnual() float32 {
	if x != nil {
		return x.MinAnnual
	}
	return 0
}

func (x *PortfolioStatsReply_Price) GetReturnYear() float32 {
	if x != nil {
		return x.ReturnYear
	}
	return 0
}

func (x *PortfolioStatsReply_Price) GetMarketCap() int64 {
	if x != nil {
		return x.MarketCap
	}
	return 0
}

func (x *PortfolioStatsReply_Price) GetBeta5Y() float32 {
	if x != nil {
		return x.Beta5Y
	}
	return 0
}

func (x *PortfolioStatsReply_Price) GetStart() float32 {
	if x != nil {
		return x.Start
	}
	return 0
}

type PortfolioStatsReply_Volume struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Avg_10D int64 `protobuf:"varint,1,opt,name=avg_10d,json=avg10d,proto3" json:"avg_10d,omitempty"`
	Avg_30D int64 `protobuf:"varint,2,opt,name=avg_30d,json=avg30d,proto3" json:"avg_30d,omitempty"`
	Avg_90D int64 `protobuf:"varint,3,opt,name=avg_90d,json=avg90d,proto3" json:"avg_90d,omitempty"`
}

func (x *PortfolioStatsReply_Volume) Reset() {
	*x = PortfolioStatsReply_Volume{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_portfolios_v1_portfolios_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortfolioStatsReply_Volume) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortfolioStatsReply_Volume) ProtoMessage() {}

func (x *PortfolioStatsReply_Volume) ProtoReflect() protoreflect.Message {
	mi := &file_proto_portfolios_v1_portfolios_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortfolioStatsReply_Volume.ProtoReflect.Descriptor instead.
func (*PortfolioStatsReply_Volume) Descriptor() ([]byte, []int) {
	return file_proto_portfolios_v1_portfolios_proto_rawDescGZIP(), []int{3, 1}
}

func (x *PortfolioStatsReply_Volume) GetAvg_10D() int64 {
	if x != nil {
		return x.Avg_10D
	}
	return 0
}

func (x *PortfolioStatsReply_Volume) GetAvg_30D() int64 {
	if x != nil {
		return x.Avg_30D
	}
	return 0
}

func (x *PortfolioStatsReply_Volume) GetAvg_90D() int64 {
	if x != nil {
		return x.Avg_90D
	}
	return 0
}

type PortfolioReplies_Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Currency      string                 `protobuf:"bytes,1,opt,name=currency,proto3" json:"currency,omitempty"`
	Size          float32                `protobuf:"fixed32,2,opt,name=size,proto3" json:"size,omitempty"`
	AllowedAssets []v1.Asset             `protobuf:"varint,3,rep,packed,name=allowed_assets,json=allowedAssets,proto3,enum=screener.v1.Asset" json:"allowed_assets,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *PortfolioReplies_Result) Reset() {
	*x = PortfolioReplies_Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_portfolios_v1_portfolios_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortfolioReplies_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortfolioReplies_Result) ProtoMessage() {}

func (x *PortfolioReplies_Result) ProtoReflect() protoreflect.Message {
	mi := &file_proto_portfolios_v1_portfolios_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortfolioReplies_Result.ProtoReflect.Descriptor instead.
func (*PortfolioReplies_Result) Descriptor() ([]byte, []int) {
	return file_proto_portfolios_v1_portfolios_proto_rawDescGZIP(), []int{4, 0}
}

func (x *PortfolioReplies_Result) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *PortfolioReplies_Result) GetSize() float32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *PortfolioReplies_Result) GetAllowedAssets() []v1.Asset {
	if x != nil {
		return x.AllowedAssets
	}
	return nil
}

func (x *PortfolioReplies_Result) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *PortfolioReplies_Result) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

var File_proto_portfolios_v1_portfolios_proto protoreflect.FileDescriptor

var file_proto_portfolios_v1_portfolios_proto_rawDesc = []byte{
	0x0a, 0x24, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69,
	0x6f, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x70, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69,
	0x6f, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70,
	0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x65, 0x72, 0x2f, 0x76, 0x31,
	0x2f, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x2f, 0x76, 0x31,
	0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x22, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2f, 0x76,
	0x31, 0x2f, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x24, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67,
	0x69, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x69, 0x65,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x5d, 0x0a, 0x10, 0x50, 0x6f, 0x72, 0x74, 0x66,
	0x6f, 0x6c, 0x69, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x07, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42,
	0x06, 0x72, 0x04, 0x10, 0x03, 0x18, 0x24, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x24, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x98, 0x01, 0x03, 0x52, 0x08, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x22, 0x6f, 0x0a, 0x16, 0x50, 0x6f, 0x72, 0x74, 0x66, 0x6f,
	0x6c, 0x69, 0x6f, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x23, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x03, 0x18, 0x24, 0x52, 0x07, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x42, 0x10, 0xfa, 0x42, 0x05, 0x92, 0x01,
	0x02, 0x18, 0x01, 0xfa, 0x42, 0x05, 0x92, 0x01, 0x02, 0x08, 0x00, 0x52, 0x0a, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x22, 0xa5, 0x03, 0x0a, 0x0e, 0x50, 0x6f, 0x72, 0x74,
	0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x39, 0x0a, 0x0e, 0x61, 0x6c,
	0x6c, 0x6f, 0x77, 0x65, 0x64, 0x5f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0e, 0x32, 0x12, 0x2e, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52, 0x0d, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x73, 0x12, 0x42, 0x0a, 0x09, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x65, 0x78, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x52, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x09,
	0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x12, 0x3f, 0x0a, 0x09, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52,
	0x09, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2d, 0x0a, 0x06, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x52, 0x06, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22,
	0x99, 0x04, 0x0a, 0x13, 0x50, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x53, 0x74, 0x61,
	0x74, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3e, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c,
	0x69, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f,
	0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x41, 0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x66, 0x6f,
	0x6c, 0x69, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69,
	0x6f, 0x53, 0x74, 0x61, 0x74, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x56, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x52, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x1a, 0xb3, 0x01, 0x0a, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61,
	0x78, 0x5f, 0x61, 0x6e, 0x6e, 0x75, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09,
	0x6d, 0x61, 0x78, 0x41, 0x6e, 0x6e, 0x75, 0x61, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x69, 0x6e,
	0x5f, 0x61, 0x6e, 0x6e, 0x75, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x6d,
	0x69, 0x6e, 0x41, 0x6e, 0x6e, 0x75, 0x61, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x5f, 0x79, 0x65, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x72,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x59, 0x65, 0x61, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x5f, 0x63, 0x61, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x43, 0x61, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x65, 0x74, 0x61,
	0x35, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x62, 0x65, 0x74, 0x61, 0x35, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x1a, 0x53, 0x0a, 0x06, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x12, 0x17, 0x0a, 0x07, 0x61, 0x76, 0x67, 0x5f, 0x31, 0x30, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x61, 0x76, 0x67, 0x31, 0x30, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x76, 0x67,
	0x5f, 0x33, 0x30, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x76, 0x67, 0x33,
	0x30, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x76, 0x67, 0x5f, 0x39, 0x30, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x76, 0x67, 0x39, 0x30, 0x64, 0x22, 0xd6, 0x02, 0x0a, 0x10,
	0x50, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73,
	0x12, 0x40, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x26, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x69,
	0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x1a, 0xe9, 0x01, 0x0a, 0x06, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x12, 0x39, 0x0a, 0x0e, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x5f, 0x61,
	0x73, 0x73, 0x65, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x73, 0x63,
	0x72, 0x65, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x73, 0x73, 0x65, 0x74, 0x52,
	0x0d, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x12, 0x39,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x32, 0xff, 0x03, 0x0a, 0x0a, 0x50, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c,
	0x69, 0x6f, 0x73, 0x12, 0x72, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x1f, 0x2e, 0x70, 0x6f, 0x72,
	0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x66,
	0x6f, 0x6c, 0x69, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x70, 0x6f,
	0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x72, 0x74,
	0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x2b, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x25, 0x12, 0x23, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69,
	0x6f, 0x73, 0x2f, 0x7b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x7d, 0x2f, 0x7b, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x7d, 0x12, 0x7f, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74, 0x73,
	0x12, 0x1f, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x22, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x53, 0x74, 0x61, 0x74, 0x73,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x31, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2b, 0x12, 0x29, 0x2f,
	0x76, 0x31, 0x2f, 0x70, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x73, 0x2f, 0x7b, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x7d, 0x2f, 0x7b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x7d, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x12, 0x87, 0x01, 0x0a, 0x0a, 0x53, 0x74, 0x72,
	0x61, 0x74, 0x65, 0x67, 0x69, 0x65, 0x73, 0x12, 0x1f, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x66, 0x6f,
	0x6c, 0x69, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69,
	0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x73, 0x74, 0x72, 0x61, 0x74,
	0x65, 0x67, 0x69, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67,
	0x69, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x22, 0x36, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x30, 0x12, 0x2e, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69,
	0x6f, 0x73, 0x2f, 0x7b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x7d, 0x2f, 0x7b, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x7d, 0x2f, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x69,
	0x65, 0x73, 0x12, 0x72, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x25, 0x2e, 0x70,
	0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x72,
	0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x52, 0x65, 0x70,
	0x6c, 0x69, 0x65, 0x73, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x12, 0x18, 0x2f, 0x76,
	0x31, 0x2f, 0x70, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x73, 0x2f, 0x7b, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x7d, 0x42, 0x9b, 0x03, 0x0a, 0x1b, 0x64, 0x65, 0x76, 0x2e, 0x6b,
	0x72, 0x61, 0x74, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x6f, 0x72, 0x74, 0x66, 0x6f,
	0x6c, 0x69, 0x6f, 0x2e, 0x76, 0x31, 0x42, 0x14, 0x41, 0x50, 0x49, 0x50, 0x6f, 0x72, 0x74, 0x66,
	0x6f, 0x6c, 0x69, 0x6f, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x56, 0x31, 0x50, 0x01, 0x5a, 0x3e,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x72, 0x6b, 0x74, 0x6f,
	0x73, 0x2d, 0x76, 0x65, 0x6e, 0x74, 0x75, 0x72, 0x65, 0x2f, 0x62, 0x75, 0x66, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x70, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x73, 0x2f, 0x76,
	0x31, 0x3b, 0x76, 0x31, 0x50, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f, 0x73, 0x92, 0x41,
	0xa2, 0x02, 0x12, 0x8e, 0x01, 0x0a, 0x0f, 0x50, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69, 0x6f,
	0x73, 0x20, 0x41, 0x50, 0x49, 0x73, 0x12, 0x18, 0x50, 0x6f, 0x72, 0x74, 0x66, 0x6f, 0x6c, 0x69,
	0x6f, 0x73, 0x20, 0x41, 0x50, 0x49, 0x73, 0x20, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73,
	0x22, 0x5c, 0x0a, 0x16, 0x41, 0x72, 0x6b, 0x74, 0x6f, 0x73, 0x20, 0x56, 0x65, 0x6e, 0x74, 0x75,
	0x72, 0x65, 0x20, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x25, 0x68, 0x74, 0x74, 0x70,
	0x73, 0x3a, 0x2f, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61,
	0x72, 0x6b, 0x74, 0x6f, 0x73, 0x2d, 0x76, 0x65, 0x6e, 0x74, 0x75, 0x72, 0x65, 0x2f, 0x62, 0x75,
	0x66, 0x1a, 0x1b, 0x6f, 0x73, 0x73, 0x40, 0x61, 0x72, 0x6b, 0x74, 0x6f, 0x73, 0x2d, 0x63, 0x6f,
	0x6e, 0x73, 0x75, 0x6c, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x32, 0x03,
	0x31, 0x2e, 0x30, 0x2a, 0x02, 0x01, 0x02, 0x32, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x5a, 0x59, 0x0a, 0x57, 0x0a,
	0x06, 0x62, 0x65, 0x61, 0x72, 0x65, 0x72, 0x12, 0x4d, 0x08, 0x02, 0x12, 0x38, 0x41, 0x75, 0x74,
	0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x2c, 0x20, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x65, 0x64, 0x20, 0x62, 0x79, 0x20, 0x42,
	0x65, 0x61, 0x72, 0x65, 0x72, 0x3a, 0x20, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x20, 0x3c, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x3e, 0x1a, 0x0d, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x20, 0x02, 0x62, 0x0c, 0x0a, 0x0a, 0x0a, 0x06, 0x62, 0x65, 0x61, 0x72,
	0x65, 0x72, 0x12, 0x00, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_portfolios_v1_portfolios_proto_rawDescOnce sync.Once
	file_proto_portfolios_v1_portfolios_proto_rawDescData = file_proto_portfolios_v1_portfolios_proto_rawDesc
)

func file_proto_portfolios_v1_portfolios_proto_rawDescGZIP() []byte {
	file_proto_portfolios_v1_portfolios_proto_rawDescOnce.Do(func() {
		file_proto_portfolios_v1_portfolios_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_portfolios_v1_portfolios_proto_rawDescData)
	})
	return file_proto_portfolios_v1_portfolios_proto_rawDescData
}

var file_proto_portfolios_v1_portfolios_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_proto_portfolios_v1_portfolios_proto_goTypes = []interface{}{
	(*PortfolioRequest)(nil),           // 0: portfolios.v1.PortfolioRequest
	(*PortfolioSearchRequest)(nil),     // 1: portfolios.v1.PortfolioSearchRequest
	(*PortfolioReply)(nil),             // 2: portfolios.v1.PortfolioReply
	(*PortfolioStatsReply)(nil),        // 3: portfolios.v1.PortfolioStatsReply
	(*PortfolioReplies)(nil),           // 4: portfolios.v1.PortfolioReplies
	(*PortfolioStatsReply_Price)(nil),  // 5: portfolios.v1.PortfolioStatsReply.Price
	(*PortfolioStatsReply_Volume)(nil), // 6: portfolios.v1.PortfolioStatsReply.Volume
	(*PortfolioReplies_Result)(nil),    // 7: portfolios.v1.PortfolioReplies.Result
	(v1.Asset)(0),                      // 8: screener.v1.Asset
	(*v11.ExchangeReplies_Result)(nil), // 9: exchanges.v1.ExchangeReplies.Result
	(*v12.PositionReplies_Result)(nil), // 10: orders.v1.PositionReplies.Result
	(*v12.OrderReply)(nil),             // 11: orders.v1.OrderReply
	(*timestamppb.Timestamp)(nil),      // 12: google.protobuf.Timestamp
	(*v13.StrategiesReplies)(nil),      // 13: strategies.v1.StrategiesReplies
}
var file_proto_portfolios_v1_portfolios_proto_depIdxs = []int32{
	8,  // 0: portfolios.v1.PortfolioReply.allowed_assets:type_name -> screener.v1.Asset
	9,  // 1: portfolios.v1.PortfolioReply.exchanges:type_name -> exchanges.v1.ExchangeReplies.Result
	10, // 2: portfolios.v1.PortfolioReply.positions:type_name -> orders.v1.PositionReplies.Result
	11, // 3: portfolios.v1.PortfolioReply.orders:type_name -> orders.v1.OrderReply
	12, // 4: portfolios.v1.PortfolioReply.created_at:type_name -> google.protobuf.Timestamp
	12, // 5: portfolios.v1.PortfolioReply.updated_at:type_name -> google.protobuf.Timestamp
	5,  // 6: portfolios.v1.PortfolioStatsReply.price:type_name -> portfolios.v1.PortfolioStatsReply.Price
	6,  // 7: portfolios.v1.PortfolioStatsReply.volume:type_name -> portfolios.v1.PortfolioStatsReply.Volume
	12, // 8: portfolios.v1.PortfolioStatsReply.created_at:type_name -> google.protobuf.Timestamp
	12, // 9: portfolios.v1.PortfolioStatsReply.updated_at:type_name -> google.protobuf.Timestamp
	7,  // 10: portfolios.v1.PortfolioReplies.results:type_name -> portfolios.v1.PortfolioReplies.Result
	8,  // 11: portfolios.v1.PortfolioReplies.Result.allowed_assets:type_name -> screener.v1.Asset
	12, // 12: portfolios.v1.PortfolioReplies.Result.created_at:type_name -> google.protobuf.Timestamp
	12, // 13: portfolios.v1.PortfolioReplies.Result.updated_at:type_name -> google.protobuf.Timestamp
	0,  // 14: portfolios.v1.Portfolios.Get:input_type -> portfolios.v1.PortfolioRequest
	0,  // 15: portfolios.v1.Portfolios.Stats:input_type -> portfolios.v1.PortfolioRequest
	0,  // 16: portfolios.v1.Portfolios.Strategies:input_type -> portfolios.v1.PortfolioRequest
	1,  // 17: portfolios.v1.Portfolios.Search:input_type -> portfolios.v1.PortfolioSearchRequest
	2,  // 18: portfolios.v1.Portfolios.Get:output_type -> portfolios.v1.PortfolioReply
	3,  // 19: portfolios.v1.Portfolios.Stats:output_type -> portfolios.v1.PortfolioStatsReply
	13, // 20: portfolios.v1.Portfolios.Strategies:output_type -> strategies.v1.StrategiesReplies
	4,  // 21: portfolios.v1.Portfolios.Search:output_type -> portfolios.v1.PortfolioReplies
	18, // [18:22] is the sub-list for method output_type
	14, // [14:18] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_proto_portfolios_v1_portfolios_proto_init() }
func file_proto_portfolios_v1_portfolios_proto_init() {
	if File_proto_portfolios_v1_portfolios_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_portfolios_v1_portfolios_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PortfolioRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_portfolios_v1_portfolios_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PortfolioSearchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_portfolios_v1_portfolios_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PortfolioReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_portfolios_v1_portfolios_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PortfolioStatsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_portfolios_v1_portfolios_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PortfolioReplies); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_portfolios_v1_portfolios_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PortfolioStatsReply_Price); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_portfolios_v1_portfolios_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PortfolioStatsReply_Volume); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_portfolios_v1_portfolios_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PortfolioReplies_Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_portfolios_v1_portfolios_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_portfolios_v1_portfolios_proto_goTypes,
		DependencyIndexes: file_proto_portfolios_v1_portfolios_proto_depIdxs,
		MessageInfos:      file_proto_portfolios_v1_portfolios_proto_msgTypes,
	}.Build()
	File_proto_portfolios_v1_portfolios_proto = out.File
	file_proto_portfolios_v1_portfolios_proto_rawDesc = nil
	file_proto_portfolios_v1_portfolios_proto_goTypes = nil
	file_proto_portfolios_v1_portfolios_proto_depIdxs = nil
}
