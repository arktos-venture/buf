syntax = "proto3";

package account.v1;

import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "validate/validate.proto";

option go_package = "grpc-api/api/account/v1;v1";
option java_multiple_files = true;
option java_package = "dev.kratos.api.account.v1";
option java_outer_classname = "AccountProtoV1";

service Account {
	rpc Get (AccountRequest) returns (AccountReply)  {
		option (google.api.http) = {
			get: "/v1/{broker}/account/{account}"
		};
	}

	rpc Create (AccountCreateRequest) returns (AccountReply)  {
		option (google.api.http) = {
			post: "/v1/{broker}/account"
			body: "*"
		};
	}

	rpc Health (google.protobuf.Empty) returns (google.protobuf.Empty)  {
    	option (google.api.http) = {
      		get: "/healthz"
    	};
  	}
}

enum Broker {
	IBKR = 0;
}

message AccountRequest {
	Broker broker = 1 [(validate.rules).enum = {defined_only: true}];
	string account = 2 [(validate.rules).string = {min_len: 3, max_len: 15}];
	string currency = 3 [(validate.rules).string.len = 3];
}

message AccountCreateRequest {
	Broker broker = 1 [(validate.rules).enum = {defined_only: true}];
	string account = 2 [(validate.rules).string = {min_len: 3, max_len: 15}];
	string currency = 3 [(validate.rules).string.len = 3];
}

message AccountReply {
	string account = 1;
	string user = 2;
	string currency = 3;
	bool active = 4;
	int64 date = 5;
}
