syntax = "proto3";

package account.v1;

import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "validate/validate.proto";

option go_package = "grpc-api/api/account/v1;v1";
option java_multiple_files = true;
option java_package = "dev.kratos.api.account.v1";
option java_outer_classname = "AccountProtoV1";

service Account {
	rpc Get (AccountRequest) returns (AccountReply)  {
		option (google.api.http) = {
			get: "/v1/account/{account}"
		};
	}

	rpc List (AccountListRequest) returns (AccountReplies)  {
		option (google.api.http) = {
			get: "/v1/accounts"
		};
	}

	rpc Create (AccountCreateRequest) returns (AccountReply)  {
		option (google.api.http) = {
			post: "/v1/account"
			body: "*"
		};
	}

	rpc Health (google.protobuf.Empty) returns (google.protobuf.Empty)  {
    	option (google.api.http) = {
      		get: "/healthz"
    	};
  	}
}


// 
// Request
// 

message Page {
	int32 number = 1 [(validate.rules).int32 = {gt: 0, lt: 10000}];
	int32 limit = 2 [(validate.rules).int32 = {gt: 1, lt: 150}];
}

message AccountRequest {
	string account = 1 [(validate.rules).string = {min_len: 3, max_len: 15}];
}

message AccountListRequest {
	string user = 1 [(validate.rules).string = {min_len: 3, max_len: 32}];
	Page page = 2 [(validate.rules).message.required = true];
}

message AccountCreateRequest {
	string name = 1 [(validate.rules).string = {min_len: 3, max_len: 15}];
	string description = 2 [(validate.rules).string = {min_len: 4, max_len: 64}];
	string currency = 3 [(validate.rules).string = {in: ["EUR", "USD", "CAD", "HKD", "GBP", "CNY", "SGD"]}];
}


// 
// Reply
// 

message AccountReply {
	string account = 1;
	string user = 2;
	string currency = 3;
	bool active = 4;
	int64 date = 5;
}

message AccountReplies {
	repeated AccountReply results = 1;
	int32 total = 2;
}