syntax = "proto3";

package screener.v1.get;

import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "validate/validate.proto";

option go_package = "grpc-api/api/screener/v1;v1";
option java_multiple_files = true;
option java_package = "dev.kratos.api.screener.v1";
option java_outer_classname = "ScreenerProtoV1";

service Screener {
  	rpc Get (ScreenerRequest) returns (ScreenerReply)  {
        option (google.api.http) = {
            post: "/v1/screener"
			body: "*"
        };
    }

	rpc Health (google.protobuf.Empty) returns (google.protobuf.Empty)  {
		option (google.api.http) = {
			get: "/healthz"
		};
	}
}

message ScreenerRequest {
	enum Operator {
		greater = 0;
		egreater = 1;
		equal = 2;
		nempty = 3;
		less = 4;
		in_range = 5;
	}

	enum Period {
		D = 0;
		W = 1;
		M = 2;
	}

	message bint64 {
		Operator operator = 1 [(validate.rules).enum = {defined_only: true}];
		int64 value = 2 [(validate.rules).int64 = {gt: 0}]; 
	}

	string country = 1 [(validate.rules).string = {in: ["FR", "US", "GB", "CN", "JP", "BR", "NL", "SG", "HK"]}];
	repeated string exchanges = 2 [(validate.rules).repeated = {min_items: 0, max_items: 5}];
	repeated string tickers = 3 [(validate.rules).repeated = {min_items: 0, max_items: 50}];
	Period period = 4 [(validate.rules).enum = {defined_only: true}];
	bint64 marketCapBasic = 5 [(validate.rules).message.required = false];
	bint64 volume = 6 [(validate.rules).message.required = false];
	bint64 close = 7 [(validate.rules).message.required = false];
	repeated int32 range = 8 [(validate.rules).repeated = {min_items: 0, max_items: 2}];
}

message ScreenerReply {
	message Total {
		int32 max = 1;
	}

	message Screener {
		message Quote {
			message Volume {
				float value = 1;
				map<int32, float> avg = 2;
			}

			message Macd {
				float value = 1;
				float signal = 2;
			}

			message BBands {
				float high = 1;
				float low = 2;
			}

			float open = 1;
			float close = 2;
			float high = 3;
			float low = 4;
			Volume volume = 5;
			Macd macd = 6;
			BBands bbands = 7;
			map<int32, float> sma = 8;
		}

		message Stats {
			float market_cap = 1;
			float beta1y = 2;
			float rsi = 3;
			map<int32, float> performances = 4;
		}

		string ticker = 1;
		string exchange = 2;
		string name = 4;
		string currency = 5;
		Stats stats = 6;
		Quote quote = 7;
	}

	repeated Screener results = 1;
	int32 total = 2;
}
