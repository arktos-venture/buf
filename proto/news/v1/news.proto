syntax = "proto3";

package news.v1;

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "validate/validate.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/arktos-venture/buf/proto/news/v1;v1News";
option java_multiple_files = true;
option java_package = "dev.kratos.api.news.v1";
option java_outer_classname = "APINewsProtoV1";
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
	info: {
        title: "News APIs";
		description: "News APIs";
        version: "1.0";
		contact: {
			name: "Arktos Venture project";
			url: "https://github.com/arktos-venture/buf";
			email: "oss@arktos-consulting.cloud";
		};
  	};
	schemes: [HTTP, HTTPS];
	consumes: "application/json";
	produces: "application/json";
	security_definitions: {
	  	security: {
			key: "bearer"
			value: {
		  		type: TYPE_API_KEY
		  		in: IN_HEADER
		  		name: "Authorization"
		  		description: "Authentication token, prefixed by Bearer: Bearer <token>"
			}
	  	}
	}
	security: {
	  	security_requirement: {
			key: "bearer"
	  	}
	}
};


service News {
	// Public API
	// Search news results
	rpc Search (NewsRequest) returns (NewsReplies)  {
		option (google.api.http) = {
		  	post: "/v1/news"
			body: "*"
		};
	}

	// Private API
	// Delete news by exchanges or tickers
	rpc Delete (NewsDeleteRequest) returns (NewsDelete)  {
		option (google.api.http) = {
		  	delete: "/v1/news"
		};
	}
}


// 
// Request
// 

message NewsRequest {
	string ticker = 1 [(validate.rules).string = {min_len: 1, max_len: 8}];
	string exchange = 2 [(validate.rules).string = {min_len: 1, max_len: 8}];
	string period = 3 [(validate.rules).string = {in: ["last", "3d", "1w"]}];
}

message NewsDeleteRequest {
	repeated string tickers = 1 [(validate.rules).repeated.min_items = 1, (validate.rules).repeated.unique = true];
	repeated string exchanges = 2 [(validate.rules).repeated.min_items = 1, (validate.rules).repeated.unique = true];
}


// 
// Reply
// 

message NewsReply {
	string title = 1;
	string link = 2;
	repeated string tags = 3;
	google.protobuf.Timestamp created_at = 4;
}

message NewsReplies {
	repeated NewsReply results = 1;
	int64 total = 2;
}

message NewsDelete {
	int64 total = 1;
}