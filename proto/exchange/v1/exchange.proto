syntax = "proto3";

package exchange.v1;

import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "validate/validate.proto";

option go_package = "grpc-api/api/exchange/v1;v1";
option java_multiple_files = true;
option java_package = "dev.kratos.api.exchange.v1";
option java_outer_classname = "ExchangeProtoV1";

service Exchange {
	rpc IsOpen (ExchangeIsOpenRequest) returns (ExchangeIsOpenReply) {
		option (google.api.http) = {
            get: "/v1/exchange/{exchange}/isopen"
        };
	}

  	rpc Get (ExchangeRequest) returns (ExchangeReply)  {
        option (google.api.http) = {
            get: "/v1/exchange/{exchange}"
        };
    }

	rpc List (ExchangeListRequest) returns (ExchangeReplies)  {
        option (google.api.http) = {
            get: "/v1/exchanges"
        };
    }

	rpc Health (google.protobuf.Empty) returns (google.protobuf.Empty)  {
		option (google.api.http) = {
			get: "/healthz"
		};
	}
}


// 
// Request
// 

message ExchangeRequest {
	message Request {
		bool companies = 1;
		bool holidays = 2;
	}

	string exchange = 1 [(validate.rules).string = {in: ["NASDAQ", "NYSE", "TO", "LSE", "PA", "BR", "AS", "SG", "SHE", "SHG", "HK", "LS", "MC", "F", "MI", "LU", "COMM", "FOREX", "INDX", "CC"]}];
	Request request = 2;
}

message ExchangeIsOpenRequest {
	string exchange = 1 [(validate.rules).string = {in: ["NASDAQ", "NYSE", "TO", "LSE", "PA", "BR", "AS", "SG", "SHE", "SHG", "HK", "LS", "MC", "F", "MI", "LU", "COMM", "FOREX", "INDX", "CC"]}];
}

message ExchangeListRequest {
	message Page {
		int32 number = 1 [(validate.rules).int32 = {gt: 0, lt: 10000}];
		int32 limit = 2 [(validate.rules).int32 = {gt: 1, lt: 150}];
	}

	Page page = 1 [(validate.rules).message.required = true];
}


// 
// Reply
// 
  
message ExchangeReply {
	message Holiday {
		string name = 1;
		string description = 2;
		string date = 3;
		bool official = 4;
	}
  
	message Company {
		int64 id = 1;
		string ticker = 2;
		string name = 3;
		string isin = 4;
		int64 activity = 5;
	}
  
	int64 id = 1;
	string ticker = 2;
	string name = 3;
	string description = 4;
	string routing = 5;
	string country = 6;
	string currency = 7;
	string timezone = 8;
	repeated Holiday holidays = 9;
	string tradingHours = 10;
	repeated Company companies = 11;
}
  
message ExchangeIsOpenReply {
	int64 id = 1;
	string name = 2;
	string timezone = 3;
	string tradingHours = 4;
	bool open = 5;
}
  
message ExchangeShortReply {
	string ticker = 1;
	string routing = 2;
	string name = 3;
	string country = 4;
	string currency = 5;
}

message ExchangeReplies {
	message Company {
		int64 id = 1;
		string ticker = 2;
		string name = 3;
		string isin = 4;
	}

	repeated ExchangeShortReply results = 1;
	int32 total = 2;
}