syntax = "proto3";

package splits.v1;

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "validate/validate.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/arktos-venture/buf/proto/splits/v1;splits_v1";
option java_multiple_files = true;
option java_package = "dev.kratos.api.splits.v1";
option java_outer_classname = "APISplitsProtoV1";
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
	info: {
    title: "Splits APIs";
		description: "Splits APIs";
    version: "1.0";
		contact: {
			name: "Arktos Venture project";
			url: "https://github.com/arktos-venture/buf";
			email: "oss@arktos-consulting.cloud";
		};
  };
	schemes: [HTTP, HTTPS];
	consumes: "application/json";
	produces: "application/json";
	security_definitions: {
	  security: {
      key: "bearer"
      value: {
        type: TYPE_API_KEY
        in: IN_HEADER
        name: "Authorization"
        description: "Authentication token, prefixed by Bearer: Bearer <token>"
      }
	  }
  }
	security: {
	  security_requirement: {
			key: "bearer"
	  }
	}
};

service Splits {
  rpc Last (SplitsLastRequest) returns (SplitsLastReply)  {
    option (google.api.http) = {
        get: "/v1/splits/{exchange}/{ticker}"
    };
  }

  rpc Search (SplitsRequest) returns (SplitsReply)  {
    option (google.api.http) = {
        post: "/v1/splits"
        body: "*"
    };
  }
}

// 
// Request
// 

enum Interval {
  d = 0;
  w = 1;
  m = 2;
}

enum Operator {
	Equal = 0;
	Greater = 1;
	GreaterEqual = 2;
	Less = 3;
	LessEqual = 4;
}
  
enum Argument {
	Ticker = 0;
	Exchange = 1;
	Time = 2;
}
  
message Filter {
	Operator operator = 1 [(validate.rules).enum = {defined_only: true}];
	Argument argument = 2 [(validate.rules).enum = {defined_only: true}];
	string value = 3;
}
  
message SplitsRequest {
	Interval interval = 1 [(validate.rules).enum = {defined_only: true}];
	repeated Filter filters = 2 [(validate.rules).repeated.min_items = 1, (validate.rules).repeated.max_items = 20];
}

message SplitsLastRequest {
	string exchange = 1;
	string ticker = 2;
}

// 
// Reply
// 

message SplitsLastReply {
  float from = 1;
  float to = 2;
  google.protobuf.Timestamp created_at = 3;
}

message SplitsReply {
  repeated float from = 1;
  repeated float to = 2;
  repeated google.protobuf.Timestamp created_at = 3;
}