syntax = "proto3";

package accounts.v1;

import "google/api/annotations.proto";
import "validate/validate.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "proto/orders/v1/orders.proto";
import "proto/positions/v1/positions.proto";

option go_package = "github.com/arktos-venture/buf/proto/accounts/v1;accounts_v1";
option java_multiple_files = true;
option java_package = "dev.kratos.api.accounts.v1";
option java_outer_classname = "APIAccountsProtoV1";
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
	info: {
        title: "Accounts APIs";
		description: "Accounts APIs trade companies";
        version: "1.0";
		contact: {
			name: "Arktos Venture project";
			url: "https://github.com/arktos-venture/buf";
			email: "oss@arktos-consulting.cloud";
		};
  	};
	schemes: [HTTP, HTTPS];
	consumes: "application/json";
	produces: "application/json";
	security_definitions: {
	  	security: {
			key: "bearer"
			value: {
		  		type: TYPE_API_KEY
		  		in: IN_HEADER
		  		name: "Authorization"
		  		description: "Authentication token, prefixed by Bearer: Bearer <token>"
			}
	  	}
	}
	security: {
	  	security_requirement: {
			key: "bearer"
	  	}
	}
};

service Accounts {
	rpc Positions (AccountRequest) returns (AccountPositionsReply)  {
		option (google.api.http) = {
			get: "/v1/account/{account}/positions"
		};
	}

	rpc Create (AccountCreateRequest) returns (AccountReply)  {
		option (google.api.http) = {
			post: "/v1/accounts"
			body: "*"
		};
	}

	rpc Update (AccountUpdateRequest) returns (AccountReply)  {
		option (google.api.http) = {
			put: "/v1/account/{account}"
			body: "*"
		};
	}
}


// 
// Request
// 

message AccountRequest {
	string account = 1 [(validate.rules).string = {min_len: 3, max_len: 36}];
}

message AccountCreateRequest {
	string name = 1 [(validate.rules).string = {min_len: 3, max_len: 100}];
	string description = 2 [(validate.rules).string = {min_len: 4, max_len: 128}];
	string currency = 3 [(validate.rules).string.len = 3];
}

message AccountUpdateRequest {
	string account = 1 [(validate.rules).string = {min_len: 3, max_len: 36}];
	string name = 2 [(validate.rules).string = {min_len: 3, max_len: 100}];
	string description = 3 [(validate.rules).string = {min_len: 4, max_len: 128}];
	string currency = 4 [(validate.rules).string.len = 3];
}


// 
// Reply
// 

message AccountPositionsReply {
	message Positions {
		repeated positions.v1.PositionCompanyReply companies = 1;
		repeated positions.v1.PositionCurrencyReply currencies = 2;
	}

	string account = 1;
	repeated orders.v1.OrderReply orders = 2;
	Positions positions = 3;
}

message AccountReply {
	string account = 1;
	string description = 2;
	string currency = 3;
}