syntax = "proto3";

package accounts.v1;

import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "validate/validate.proto";
import "proto/orders/v1/orders.proto";
import "proto/positions/v1/positions.proto";

option go_package = "github.com/arktos-venture/buf/proto/accounts/v1;accounts_v1";
option java_multiple_files = true;
option java_package = "dev.kratos.api.accounts.v1";
option java_outer_classname = "AccountsProtoV1";

service Accounts {
	rpc Get (AccountRequest) returns (AccountReply)  {
		option (google.api.http) = {
			get: "/v1/account/{account}"
		};
	}

	rpc List (AccountListRequest) returns (AccountReplies)  {
		option (google.api.http) = {
			get: "/v1/accounts"
		};
	}

	rpc Create (AccountCreateRequest) returns (AccountReply)  {
		option (google.api.http) = {
			post: "/v1/account"
			body: "*"
		};
	}

	rpc Health (google.protobuf.Empty) returns (google.protobuf.Empty)  {
    	option (google.api.http) = {
      		get: "/healthz"
    	};
  	}
}


// 
// Request
// 

message Page {
	int32 number = 1 [(validate.rules).int32 = {gt: 0, lte: 10000}];
	int32 limit = 2 [(validate.rules).int32 = {gt: 0, lte: 150}];
}

message AccountRequest {
	string userId = 1 [(validate.rules).string.uuid = true];
	string account = 2 [(validate.rules).string = {min_len: 3, max_len: 100}];
}

message AccountListRequest {
	string userId = 1 [(validate.rules).string.uuid = true];
	Page page = 2 [(validate.rules).message.required = true];
}

message AccountCreateRequest {
	string userId = 1 [(validate.rules).string.uuid = true];
	string account = 2 [(validate.rules).string = {min_len: 3, max_len: 100}];
	string description = 3 [(validate.rules).string = {min_len: 4, max_len: 128}];
	string currency = 4 [(validate.rules).string.len = 3];
}


// 
// Reply
// 

message AccountReply {
	message Positions {
		repeated positions.v1.PositionCompanyReply companies = 1;
		repeated positions.v1.PositionCurrencyReply currencies = 2;
	}

	string id = 1;
	string userId = 2;
	string account = 3;
	string currency = 4;
	repeated orders.v1.OrderReply orders = 5;
	Positions positions = 6;
	bool active = 7;
}

message AccountReplies {
	repeated AccountReply results = 1;
	int32 total = 2;
}