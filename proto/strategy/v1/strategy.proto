syntax = "proto3";

package strategy.v1;

import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "validate/validate.proto";

option go_package = "grpc-api/api/strategy/v1;v1";
option java_multiple_files = true;
option java_package = "dev.kratos.api.strategy.v1";
option java_outer_classname = "StrategyProtoV1";

service Strategy {
	rpc Search (StrategyRequest) returns (StrategyReply)  {
		option (google.api.http) = {
			post: "/v1/strategy"
			body: "*"
		};
	}

	rpc Health (google.protobuf.Empty) returns (google.protobuf.Empty)  {
		option (google.api.http) = {
			get: "/healthz"
		};
	}
}

// 
// Request
// 

message StrategyRequest {
	enum StrategyType {
		AKTrend = 0;
		MACD = 1;
	}

	enum Interval {
		mm = 0;
		h = 1;
		d = 2;
		w = 3;
		m = 4;
	}

	string ticker = 1 [(validate.rules).string = {min_len: 1, max_len: 8}];
	string exchange = 2 [(validate.rules).string = {min_len: 2, max_len: 8}];
	string currency = 3 [(validate.rules).string.len = 3];
	Interval interval = 4 [(validate.rules).enum = {defined_only: true}];
	string period = 5 [(validate.rules).string = {in: ["last", "3d", "1w", "2w", "1m", "2m", "3m", "6m", "1y", "2y", "3y", "5y", "10y", "20y", "30y"]}];
	StrategyType strategy = 6 [(validate.rules).enum = {defined_only: true}]; 
}

// 
// Reply
// 

message StrategyReply {
	enum Action {
		HOLD = 0;
		BUY = 1;
		SELL = 2;
	}

	repeated float close = 1;
	repeated Action action = 2;
	repeated float delta = 3;
	repeated int64 date = 4;
	int32 total = 5;
}
