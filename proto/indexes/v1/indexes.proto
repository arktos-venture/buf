syntax = "proto3";

package indexes.v1;

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "validate/validate.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "proto/companies/v1/companies.proto";

option go_package = "github.com/arktos-venture/buf/proto/indexes/v1;v1Indexes";
option java_multiple_files = true;
option java_package = "dev.kratos.api.indexes.v1";
option java_outer_classname = "APIIndexesProtoV1";
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
	info: {
    title: "Indexes APIs";
		description: "Indexes APIs";
    version: "1.0";
		contact: {
			name: "Arktos Venture project";
			url: "https://github.com/arktos-venture/buf";
			email: "oss@arktos-consulting.cloud";
		};
  };
	schemes: [HTTP, HTTPS];
	consumes: "application/json";
	produces: "application/json";
	security_definitions: {
	  security: {
			key: "bearer"
			value: {
		  	type: TYPE_API_KEY
		  	in: IN_HEADER
		  	name: "Authorization"
		  	description: "Authentication token, prefixed by Bearer: Bearer <token>"
			}
	  }
	}
	security: {
	  security_requirement: {
			key: "bearer"
	  }
	}
};


service Indexes {
	// Public API
	// Get Index properties
  rpc Get (IndexRequest) returns (IndexReply)  {
    option (google.api.http) = {
      get: "/v1/indexes/{ticker}"
    };
  }

	// Public API
	// Search Index companies
  rpc Search (IndexSearchRequest) returns (IndexSearchReplies)  {
    option (google.api.http) = {
      get: "/v1/indexes/{account}/search"
    };
  }

	// Public API
	// Create Index companies
  rpc Create (IndexCreateRequest) returns (IndexReply)  {
    option (google.api.http) = {
      post: "/v1/indexes"
      body: "*"
    };
  }

	// Public API
	// Update Index companies
  rpc Update (IndexCreateRequest) returns (IndexReply)  {
    option (google.api.http) = {
      put: "/v1/indexes/{ticker}"
      body: "*"
    };
  }

	// Public API
	// Delete Index companies
  rpc Delete (IndexDeleteRequest) returns (IndexDelete)  {
    option (google.api.http) = {
      delete: "/v1/indexes"
    };
  }
}

// 
// Transverse
// 

message IndexSearch {
  repeated string filters = 1;
  repeated string sort = 2;
  int64 limit = 3;
}


// 
// Request
// 

message IndexRequest {
  string account = 1 [(validate.rules).string = {min_len: 3, max_len: 36}];
  string ticker = 2 [(validate.rules).string = {min_len: 2, max_len: 36}];
}

message IndexSearchRequest { 
  string account = 1 [(validate.rules).string = {min_len: 3, max_len: 36}];
}

message IndexCreateRequest {
  string account = 1 [(validate.rules).string = {min_len: 3, max_len: 36}];
  string ticker = 2 [(validate.rules).string = {min_len: 2, max_len: 36}];
  IndexSearch request = 3;
  bool public = 4;
}

message IndexDeleteRequest {
  repeated string tickers = 1 [(validate.rules).repeated.min_items = 1, (validate.rules).repeated.unique = true];
}


// 
// Reply
// 

message IndexReply {
  string ticker = 1;
  bool public = 2;
  repeated companies.v1.CompanyReplies.Result companies = 3;
	google.protobuf.Timestamp created_at = 4;
	google.protobuf.Timestamp updated_at = 5;
}

message IndexReplies {
  repeated IndexReply results = 1;
  int64 total = 2;
}

message IndexSearchReply {
  string ticker = 1;
  bool public = 2;
  google.protobuf.Timestamp created_at = 3;
	google.protobuf.Timestamp updated_at = 4;
}

message IndexSearchReplies {
  repeated IndexSearchReply results = 1;
  int64 total = 2;
}

message IndexDelete {
  int64 total = 1;
}