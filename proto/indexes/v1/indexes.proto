syntax = "proto3";

package indexes.v1;

import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "validate/validate.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "proto/screener/v1/screener.proto";

option go_package = "github.com/arktos-venture/buf/proto/indexes/v1;indexes_v1";
option java_multiple_files = true;
option java_package = "dev.kratos.api.indexes.v1";
option java_outer_classname = "APIIndexesProtoV1";
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
	info: {
        title: "Indexes APIs";
		description: "Indexes APIs";
        version: "1.0";
		contact: {
			name: "Arktos Venture project";
			url: "https://github.com/arktos-venture/buf";
			email: "oss@arktos-consulting.cloud";
		};
  	};
	schemes: [HTTP, HTTPS];
	consumes: "application/json";
	produces: "application/json";
	security_definitions: {
	  	security: {
			key: "bearer"
			value: {
		  		type: TYPE_API_KEY
		  		in: IN_HEADER
		  		name: "Authorization"
		  		description: "Authentication token, prefixed by Bearer: Bearer <token>"
			}
	  	}
	}
	security: {
	  	security_requirement: {
			key: "bearer"
	  	}
	}
};


service Indexes {
  rpc Get (IndexesRequest) returns (IndexesReply)  {
    option (google.api.http) = {
      get: "/v1/indexes/{ref}"
    };
  }

  rpc Search (IndexesSearchRequest) returns (IndexesSearchReplies)  {
    option (google.api.http) = {
      get: "/v1/indexes"
    };
  }

  rpc Create (IndexesCreateRequest) returns (IndexesReply)  {
    option (google.api.http) = {
      post: "/v1/indexes"
      body: "*"
    };
  }

  rpc Update (IndexesCreateRequest) returns (IndexesReply)  {
    option (google.api.http) = {
      put: "/v1/indexes"
      body: "*"
    };
  }

  rpc Delete (IndexesRequest) returns (IndexesReply)  {
    option (google.api.http) = {
      delete: "/v1/indexes/{ref}"
    };
  }

  rpc Health (google.protobuf.Empty) returns (google.protobuf.Empty)  {
		option (google.api.http) = {
			get: "/healthz"
		};

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
			security: { } // Disable security key
		};
	}
}


// 
// Request
// 

message IndexesRequest {
  string ref = 1 [(validate.rules).string = {min_len: 2, max_len: 32}];
}

message IndexesSearchRequest {
  message Page {
    int32 number = 1 [(validate.rules).int32 = {gt: 0, lte: 10000}];
    int32 limit = 2 [(validate.rules).int32 = {gt: 0, lte: 150}];
  }
  
  string currency = 1 [(validate.rules).string.len = 3];
  bool public = 2;
  Page page = 3 [(validate.rules).message.required = true];
}

message IndexesCreateRequest {
  string ref = 1 [(validate.rules).string = {min_len: 1, max_len: 32}];
  string request = 2 [(validate.rules).string = {min_len: 8, max_len: 8196}];
  bool public = 3;
}


// 
// Reply
// 

message IndexesReply {
  string ref = 1;
  bool public = 2;
  repeated screener.v1.ScreenerReply companies = 3;
	google.protobuf.Timestamp created_at = 4;
	google.protobuf.Timestamp updated_at = 5;
}

message IndexesReplies {
  repeated IndexesReply results = 1;
  int32 total = 2;
}

message IndexesSearchReply {
  string ref = 1;
}

message IndexesSearchReplies {
  repeated IndexesSearchReply results = 1;
  int32 total = 2;
}