// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.4
// source: proto/indexes/v1/indexes.proto

package indexes_v1

import (
	v1 "github.com/arktos-venture/buf/proto/screener/v1"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type IndexesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ref string `protobuf:"bytes,1,opt,name=ref,proto3" json:"ref,omitempty"`
}

func (x *IndexesRequest) Reset() {
	*x = IndexesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_indexes_v1_indexes_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexesRequest) ProtoMessage() {}

func (x *IndexesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_indexes_v1_indexes_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexesRequest.ProtoReflect.Descriptor instead.
func (*IndexesRequest) Descriptor() ([]byte, []int) {
	return file_proto_indexes_v1_indexes_proto_rawDescGZIP(), []int{0}
}

func (x *IndexesRequest) GetRef() string {
	if x != nil {
		return x.Ref
	}
	return ""
}

type IndexesSearchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Currency string                     `protobuf:"bytes,1,opt,name=currency,proto3" json:"currency,omitempty"`
	Public   bool                       `protobuf:"varint,2,opt,name=public,proto3" json:"public,omitempty"`
	Page     *IndexesSearchRequest_Page `protobuf:"bytes,3,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *IndexesSearchRequest) Reset() {
	*x = IndexesSearchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_indexes_v1_indexes_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexesSearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexesSearchRequest) ProtoMessage() {}

func (x *IndexesSearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_indexes_v1_indexes_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexesSearchRequest.ProtoReflect.Descriptor instead.
func (*IndexesSearchRequest) Descriptor() ([]byte, []int) {
	return file_proto_indexes_v1_indexes_proto_rawDescGZIP(), []int{1}
}

func (x *IndexesSearchRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *IndexesSearchRequest) GetPublic() bool {
	if x != nil {
		return x.Public
	}
	return false
}

func (x *IndexesSearchRequest) GetPage() *IndexesSearchRequest_Page {
	if x != nil {
		return x.Page
	}
	return nil
}

type IndexesCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ref     string `protobuf:"bytes,1,opt,name=ref,proto3" json:"ref,omitempty"`
	Request string `protobuf:"bytes,2,opt,name=request,proto3" json:"request,omitempty"`
	Public  bool   `protobuf:"varint,3,opt,name=public,proto3" json:"public,omitempty"`
}

func (x *IndexesCreateRequest) Reset() {
	*x = IndexesCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_indexes_v1_indexes_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexesCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexesCreateRequest) ProtoMessage() {}

func (x *IndexesCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_indexes_v1_indexes_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexesCreateRequest.ProtoReflect.Descriptor instead.
func (*IndexesCreateRequest) Descriptor() ([]byte, []int) {
	return file_proto_indexes_v1_indexes_proto_rawDescGZIP(), []int{2}
}

func (x *IndexesCreateRequest) GetRef() string {
	if x != nil {
		return x.Ref
	}
	return ""
}

func (x *IndexesCreateRequest) GetRequest() string {
	if x != nil {
		return x.Request
	}
	return ""
}

func (x *IndexesCreateRequest) GetPublic() bool {
	if x != nil {
		return x.Public
	}
	return false
}

type IndexesReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ref       string                 `protobuf:"bytes,1,opt,name=ref,proto3" json:"ref,omitempty"`
	Public    bool                   `protobuf:"varint,2,opt,name=public,proto3" json:"public,omitempty"`
	Companies []*v1.ScreenerReply    `protobuf:"bytes,3,rep,name=companies,proto3" json:"companies,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *IndexesReply) Reset() {
	*x = IndexesReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_indexes_v1_indexes_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexesReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexesReply) ProtoMessage() {}

func (x *IndexesReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_indexes_v1_indexes_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexesReply.ProtoReflect.Descriptor instead.
func (*IndexesReply) Descriptor() ([]byte, []int) {
	return file_proto_indexes_v1_indexes_proto_rawDescGZIP(), []int{3}
}

func (x *IndexesReply) GetRef() string {
	if x != nil {
		return x.Ref
	}
	return ""
}

func (x *IndexesReply) GetPublic() bool {
	if x != nil {
		return x.Public
	}
	return false
}

func (x *IndexesReply) GetCompanies() []*v1.ScreenerReply {
	if x != nil {
		return x.Companies
	}
	return nil
}

func (x *IndexesReply) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *IndexesReply) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type IndexesReplies struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*IndexesReply `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Total   int32           `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *IndexesReplies) Reset() {
	*x = IndexesReplies{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_indexes_v1_indexes_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexesReplies) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexesReplies) ProtoMessage() {}

func (x *IndexesReplies) ProtoReflect() protoreflect.Message {
	mi := &file_proto_indexes_v1_indexes_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexesReplies.ProtoReflect.Descriptor instead.
func (*IndexesReplies) Descriptor() ([]byte, []int) {
	return file_proto_indexes_v1_indexes_proto_rawDescGZIP(), []int{4}
}

func (x *IndexesReplies) GetResults() []*IndexesReply {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *IndexesReplies) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type IndexesSearchReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ref string `protobuf:"bytes,1,opt,name=ref,proto3" json:"ref,omitempty"`
}

func (x *IndexesSearchReply) Reset() {
	*x = IndexesSearchReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_indexes_v1_indexes_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexesSearchReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexesSearchReply) ProtoMessage() {}

func (x *IndexesSearchReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_indexes_v1_indexes_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexesSearchReply.ProtoReflect.Descriptor instead.
func (*IndexesSearchReply) Descriptor() ([]byte, []int) {
	return file_proto_indexes_v1_indexes_proto_rawDescGZIP(), []int{5}
}

func (x *IndexesSearchReply) GetRef() string {
	if x != nil {
		return x.Ref
	}
	return ""
}

type IndexesSearchReplies struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*IndexesSearchReply `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Total   int32                 `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *IndexesSearchReplies) Reset() {
	*x = IndexesSearchReplies{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_indexes_v1_indexes_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexesSearchReplies) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexesSearchReplies) ProtoMessage() {}

func (x *IndexesSearchReplies) ProtoReflect() protoreflect.Message {
	mi := &file_proto_indexes_v1_indexes_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexesSearchReplies.ProtoReflect.Descriptor instead.
func (*IndexesSearchReplies) Descriptor() ([]byte, []int) {
	return file_proto_indexes_v1_indexes_proto_rawDescGZIP(), []int{6}
}

func (x *IndexesSearchReplies) GetResults() []*IndexesSearchReply {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *IndexesSearchReplies) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type IndexesSearchRequest_Page struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number int32 `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	Limit  int32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *IndexesSearchRequest_Page) Reset() {
	*x = IndexesSearchRequest_Page{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_indexes_v1_indexes_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexesSearchRequest_Page) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexesSearchRequest_Page) ProtoMessage() {}

func (x *IndexesSearchRequest_Page) ProtoReflect() protoreflect.Message {
	mi := &file_proto_indexes_v1_indexes_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexesSearchRequest_Page.ProtoReflect.Descriptor instead.
func (*IndexesSearchRequest_Page) Descriptor() ([]byte, []int) {
	return file_proto_indexes_v1_indexes_proto_rawDescGZIP(), []int{1, 0}
}

func (x *IndexesSearchRequest_Page) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *IndexesSearchRequest_Page) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

var File_proto_indexes_v1_indexes_proto protoreflect.FileDescriptor

var file_proto_indexes_v1_indexes_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x2f,
	0x76, 0x31, 0x2f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x0a, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70,
	0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x20, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x65,
	0x72, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x2d, 0x0a, 0x0e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x03, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x02, 0x18, 0x20, 0x52, 0x03, 0x72,
	0x65, 0x66, 0x22, 0xe7, 0x01, 0x0a, 0x14, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x08, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa,
	0x42, 0x05, 0x72, 0x03, 0x98, 0x01, 0x03, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x12, 0x43, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x42, 0x08,
	0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x1a, 0x4c,
	0x0a, 0x04, 0x50, 0x61, 0x67, 0x65, 0x12, 0x22, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x1a, 0x05, 0x18, 0x90, 0x4e,
	0x20, 0x00, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x1a, 0x05,
	0x18, 0x96, 0x01, 0x20, 0x00, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x71, 0x0a, 0x14,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x03, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x01, 0x18, 0x20, 0x52, 0x03, 0x72, 0x65,
	0x66, 0x12, 0x24, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x08, 0x18, 0x84, 0x40, 0x52, 0x07,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x22,
	0xe8, 0x01, 0x0a, 0x0c, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x72,
	0x65, 0x66, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x63, 0x72, 0x65,
	0x65, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x69, 0x65, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x5a, 0x0a, 0x0e, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x07,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x26, 0x0a, 0x12, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65,
	0x73, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x72, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x72, 0x65, 0x66, 0x22, 0x66,
	0x0a, 0x14, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52,
	0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x12, 0x38, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x32, 0xac, 0x04, 0x0a, 0x07, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x65, 0x73, 0x12, 0x56, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x1a, 0x2e, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x13, 0x12, 0x11, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x65, 0x73, 0x2f, 0x7b, 0x72, 0x65, 0x66, 0x7d, 0x12, 0x61, 0x0a, 0x06, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x12, 0x20, 0x2e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x22, 0x13, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0d,
	0x12, 0x0b, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x12, 0x5c, 0x0a,
	0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x20, 0x2e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x22, 0x0b, 0x2f, 0x76, 0x31,
	0x2f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x5c, 0x0a, 0x06, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x20, 0x2e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x1a, 0x0b, 0x2f, 0x76, 0x31, 0x2f, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x59, 0x0a, 0x06, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x12, 0x1a, 0x2e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x18, 0x2e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x19, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x13, 0x2a, 0x11, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x2f, 0x7b,
	0x72, 0x65, 0x66, 0x7d, 0x12, 0x4f, 0x0a, 0x06, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x12, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x15,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0a, 0x12, 0x08, 0x2f, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x7a,
	0x92, 0x41, 0x02, 0x62, 0x00, 0x42, 0x81, 0x03, 0x0a, 0x19, 0x64, 0x65, 0x76, 0x2e, 0x6b, 0x72,
	0x61, 0x74, 0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73,
	0x2e, 0x76, 0x31, 0x42, 0x11, 0x41, 0x50, 0x49, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x56, 0x31, 0x50, 0x01, 0x5a, 0x39, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x72, 0x6b, 0x74, 0x6f, 0x73, 0x2d, 0x76, 0x65, 0x6e, 0x74,
	0x75, 0x72, 0x65, 0x2f, 0x62, 0x75, 0x66, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x65, 0x73, 0x2f, 0x76, 0x31, 0x3b, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73,
	0x5f, 0x76, 0x31, 0x92, 0x41, 0x92, 0x02, 0x12, 0x7f, 0x0a, 0x0c, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x65, 0x73, 0x20, 0x41, 0x50, 0x49, 0x73, 0x12, 0x0c, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73,
	0x20, 0x41, 0x50, 0x49, 0x73, 0x22, 0x5c, 0x0a, 0x16, 0x41, 0x72, 0x6b, 0x74, 0x6f, 0x73, 0x20,
	0x56, 0x65, 0x6e, 0x74, 0x75, 0x72, 0x65, 0x20, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12,
	0x25, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x72, 0x6b, 0x74, 0x6f, 0x73, 0x2d, 0x76, 0x65, 0x6e, 0x74, 0x75,
	0x72, 0x65, 0x2f, 0x62, 0x75, 0x66, 0x1a, 0x1b, 0x6f, 0x73, 0x73, 0x40, 0x61, 0x72, 0x6b, 0x74,
	0x6f, 0x73, 0x2d, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6c, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x63, 0x6c,
	0x6f, 0x75, 0x64, 0x32, 0x03, 0x31, 0x2e, 0x30, 0x2a, 0x02, 0x01, 0x02, 0x32, 0x10, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x10,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e,
	0x5a, 0x59, 0x0a, 0x57, 0x0a, 0x06, 0x62, 0x65, 0x61, 0x72, 0x65, 0x72, 0x12, 0x4d, 0x08, 0x02,
	0x12, 0x38, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x20, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2c, 0x20, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x65, 0x64,
	0x20, 0x62, 0x79, 0x20, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x3a, 0x20, 0x42, 0x65, 0x61, 0x72,
	0x65, 0x72, 0x20, 0x3c, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x3e, 0x1a, 0x0d, 0x41, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x02, 0x62, 0x0c, 0x0a, 0x0a, 0x0a,
	0x06, 0x62, 0x65, 0x61, 0x72, 0x65, 0x72, 0x12, 0x00, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_proto_indexes_v1_indexes_proto_rawDescOnce sync.Once
	file_proto_indexes_v1_indexes_proto_rawDescData = file_proto_indexes_v1_indexes_proto_rawDesc
)

func file_proto_indexes_v1_indexes_proto_rawDescGZIP() []byte {
	file_proto_indexes_v1_indexes_proto_rawDescOnce.Do(func() {
		file_proto_indexes_v1_indexes_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_indexes_v1_indexes_proto_rawDescData)
	})
	return file_proto_indexes_v1_indexes_proto_rawDescData
}

var file_proto_indexes_v1_indexes_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_proto_indexes_v1_indexes_proto_goTypes = []interface{}{
	(*IndexesRequest)(nil),            // 0: indexes.v1.IndexesRequest
	(*IndexesSearchRequest)(nil),      // 1: indexes.v1.IndexesSearchRequest
	(*IndexesCreateRequest)(nil),      // 2: indexes.v1.IndexesCreateRequest
	(*IndexesReply)(nil),              // 3: indexes.v1.IndexesReply
	(*IndexesReplies)(nil),            // 4: indexes.v1.IndexesReplies
	(*IndexesSearchReply)(nil),        // 5: indexes.v1.IndexesSearchReply
	(*IndexesSearchReplies)(nil),      // 6: indexes.v1.IndexesSearchReplies
	(*IndexesSearchRequest_Page)(nil), // 7: indexes.v1.IndexesSearchRequest.Page
	(*v1.ScreenerReply)(nil),          // 8: screener.v1.ScreenerReply
	(*timestamppb.Timestamp)(nil),     // 9: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),             // 10: google.protobuf.Empty
}
var file_proto_indexes_v1_indexes_proto_depIdxs = []int32{
	7,  // 0: indexes.v1.IndexesSearchRequest.page:type_name -> indexes.v1.IndexesSearchRequest.Page
	8,  // 1: indexes.v1.IndexesReply.companies:type_name -> screener.v1.ScreenerReply
	9,  // 2: indexes.v1.IndexesReply.created_at:type_name -> google.protobuf.Timestamp
	9,  // 3: indexes.v1.IndexesReply.updated_at:type_name -> google.protobuf.Timestamp
	3,  // 4: indexes.v1.IndexesReplies.results:type_name -> indexes.v1.IndexesReply
	5,  // 5: indexes.v1.IndexesSearchReplies.results:type_name -> indexes.v1.IndexesSearchReply
	0,  // 6: indexes.v1.Indexes.Get:input_type -> indexes.v1.IndexesRequest
	1,  // 7: indexes.v1.Indexes.Search:input_type -> indexes.v1.IndexesSearchRequest
	2,  // 8: indexes.v1.Indexes.Create:input_type -> indexes.v1.IndexesCreateRequest
	2,  // 9: indexes.v1.Indexes.Update:input_type -> indexes.v1.IndexesCreateRequest
	0,  // 10: indexes.v1.Indexes.Delete:input_type -> indexes.v1.IndexesRequest
	10, // 11: indexes.v1.Indexes.Health:input_type -> google.protobuf.Empty
	3,  // 12: indexes.v1.Indexes.Get:output_type -> indexes.v1.IndexesReply
	6,  // 13: indexes.v1.Indexes.Search:output_type -> indexes.v1.IndexesSearchReplies
	3,  // 14: indexes.v1.Indexes.Create:output_type -> indexes.v1.IndexesReply
	3,  // 15: indexes.v1.Indexes.Update:output_type -> indexes.v1.IndexesReply
	3,  // 16: indexes.v1.Indexes.Delete:output_type -> indexes.v1.IndexesReply
	10, // 17: indexes.v1.Indexes.Health:output_type -> google.protobuf.Empty
	12, // [12:18] is the sub-list for method output_type
	6,  // [6:12] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_proto_indexes_v1_indexes_proto_init() }
func file_proto_indexes_v1_indexes_proto_init() {
	if File_proto_indexes_v1_indexes_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_indexes_v1_indexes_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_indexes_v1_indexes_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexesSearchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_indexes_v1_indexes_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexesCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_indexes_v1_indexes_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexesReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_indexes_v1_indexes_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexesReplies); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_indexes_v1_indexes_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexesSearchReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_indexes_v1_indexes_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexesSearchReplies); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_indexes_v1_indexes_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexesSearchRequest_Page); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_indexes_v1_indexes_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_indexes_v1_indexes_proto_goTypes,
		DependencyIndexes: file_proto_indexes_v1_indexes_proto_depIdxs,
		MessageInfos:      file_proto_indexes_v1_indexes_proto_msgTypes,
	}.Build()
	File_proto_indexes_v1_indexes_proto = out.File
	file_proto_indexes_v1_indexes_proto_rawDesc = nil
	file_proto_indexes_v1_indexes_proto_goTypes = nil
	file_proto_indexes_v1_indexes_proto_depIdxs = nil
}
