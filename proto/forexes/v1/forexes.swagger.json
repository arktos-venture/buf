{
  "swagger": "2.0",
  "info": {
    "title": "Forexes APIs",
    "description": "Forexes APIs",
    "version": "1.0",
    "contact": {
      "name": "Arktos Venture project",
      "url": "https://github.com/arktos-venture/buf",
      "email": "oss@arktos-consulting.cloud"
    }
  },
  "tags": [
    {
      "name": "Forexes"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/forexes/{currency}/pairs": {
      "get": {
        "operationId": "Forexes_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ForexListReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "currency",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Forexes"
        ]
      }
    },
    "/v1/forexes/{ticker}": {
      "get": {
        "operationId": "Forexes_Get",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ForexReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/googlerpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "ticker",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Forexes"
        ]
      }
    }
  },
  "definitions": {
    "ForexReplyCurrency": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "exchanges": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "googlerpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "v1ForexListReply": {
      "type": "object",
      "properties": {
        "currency": {
          "type": "string"
        },
        "forexes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1ForexReply": {
      "type": "object",
      "properties": {
        "ticker": {
          "type": "string"
        },
        "quote": {
          "$ref": "#/definitions/v1QuotesLastReply"
        },
        "from": {
          "$ref": "#/definitions/ForexReplyCurrency"
        },
        "to": {
          "$ref": "#/definitions/ForexReplyCurrency"
        }
      }
    },
    "v1QuotesLastReply": {
      "type": "object",
      "properties": {
        "open": {
          "type": "number",
          "format": "float"
        },
        "close": {
          "type": "number",
          "format": "float"
        },
        "low": {
          "type": "number",
          "format": "float"
        },
        "high": {
          "type": "number",
          "format": "float"
        },
        "volume": {
          "type": "number",
          "format": "float"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    }
  },
  "securityDefinitions": {
    "bearer": {
      "type": "apiKey",
      "description": "Authentication token, prefixed by Bearer: Bearer \u003ctoken\u003e",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "bearer": []
    }
  ]
}
