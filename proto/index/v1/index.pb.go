// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.4
// source: proto/index/v1/index.proto

package v1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type IndexRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ref string `protobuf:"bytes,1,opt,name=ref,proto3" json:"ref,omitempty"`
}

func (x *IndexRequest) Reset() {
	*x = IndexRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_index_v1_index_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexRequest) ProtoMessage() {}

func (x *IndexRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_index_v1_index_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexRequest.ProtoReflect.Descriptor instead.
func (*IndexRequest) Descriptor() ([]byte, []int) {
	return file_proto_index_v1_index_proto_rawDescGZIP(), []int{0}
}

func (x *IndexRequest) GetRef() string {
	if x != nil {
		return x.Ref
	}
	return ""
}

type IndexSearchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Currency string                   `protobuf:"bytes,1,opt,name=currency,proto3" json:"currency,omitempty"`
	Public   bool                     `protobuf:"varint,2,opt,name=public,proto3" json:"public,omitempty"`
	Page     *IndexSearchRequest_Page `protobuf:"bytes,3,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *IndexSearchRequest) Reset() {
	*x = IndexSearchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_index_v1_index_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexSearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexSearchRequest) ProtoMessage() {}

func (x *IndexSearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_index_v1_index_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexSearchRequest.ProtoReflect.Descriptor instead.
func (*IndexSearchRequest) Descriptor() ([]byte, []int) {
	return file_proto_index_v1_index_proto_rawDescGZIP(), []int{1}
}

func (x *IndexSearchRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *IndexSearchRequest) GetPublic() bool {
	if x != nil {
		return x.Public
	}
	return false
}

func (x *IndexSearchRequest) GetPage() *IndexSearchRequest_Page {
	if x != nil {
		return x.Page
	}
	return nil
}

type IndexCreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ref         string `protobuf:"bytes,1,opt,name=ref,proto3" json:"ref,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Currency    string `protobuf:"bytes,4,opt,name=currency,proto3" json:"currency,omitempty"`
	Request     string `protobuf:"bytes,5,opt,name=request,proto3" json:"request,omitempty"`
	Public      bool   `protobuf:"varint,6,opt,name=public,proto3" json:"public,omitempty"`
}

func (x *IndexCreateRequest) Reset() {
	*x = IndexCreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_index_v1_index_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexCreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexCreateRequest) ProtoMessage() {}

func (x *IndexCreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_index_v1_index_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexCreateRequest.ProtoReflect.Descriptor instead.
func (*IndexCreateRequest) Descriptor() ([]byte, []int) {
	return file_proto_index_v1_index_proto_rawDescGZIP(), []int{2}
}

func (x *IndexCreateRequest) GetRef() string {
	if x != nil {
		return x.Ref
	}
	return ""
}

func (x *IndexCreateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *IndexCreateRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *IndexCreateRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *IndexCreateRequest) GetRequest() string {
	if x != nil {
		return x.Request
	}
	return ""
}

func (x *IndexCreateRequest) GetPublic() bool {
	if x != nil {
		return x.Public
	}
	return false
}

type IndexReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ref         string                 `protobuf:"bytes,1,opt,name=ref,proto3" json:"ref,omitempty"`
	Name        string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Currency    string                 `protobuf:"bytes,4,opt,name=currency,proto3" json:"currency,omitempty"`
	Public      bool                   `protobuf:"varint,5,opt,name=public,proto3" json:"public,omitempty"`
	Companies   []*IndexReply_Company  `protobuf:"bytes,6,rep,name=companies,proto3" json:"companies,omitempty"`
	CreatedAt   *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt   *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *IndexReply) Reset() {
	*x = IndexReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_index_v1_index_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexReply) ProtoMessage() {}

func (x *IndexReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_index_v1_index_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexReply.ProtoReflect.Descriptor instead.
func (*IndexReply) Descriptor() ([]byte, []int) {
	return file_proto_index_v1_index_proto_rawDescGZIP(), []int{3}
}

func (x *IndexReply) GetRef() string {
	if x != nil {
		return x.Ref
	}
	return ""
}

func (x *IndexReply) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *IndexReply) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *IndexReply) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *IndexReply) GetPublic() bool {
	if x != nil {
		return x.Public
	}
	return false
}

func (x *IndexReply) GetCompanies() []*IndexReply_Company {
	if x != nil {
		return x.Companies
	}
	return nil
}

func (x *IndexReply) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *IndexReply) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type IndexReplies struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*IndexReply `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Total   int32         `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *IndexReplies) Reset() {
	*x = IndexReplies{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_index_v1_index_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexReplies) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexReplies) ProtoMessage() {}

func (x *IndexReplies) ProtoReflect() protoreflect.Message {
	mi := &file_proto_index_v1_index_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexReplies.ProtoReflect.Descriptor instead.
func (*IndexReplies) Descriptor() ([]byte, []int) {
	return file_proto_index_v1_index_proto_rawDescGZIP(), []int{4}
}

func (x *IndexReplies) GetResults() []*IndexReply {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *IndexReplies) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type IndexSearchReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ref         string `protobuf:"bytes,1,opt,name=ref,proto3" json:"ref,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *IndexSearchReply) Reset() {
	*x = IndexSearchReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_index_v1_index_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexSearchReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexSearchReply) ProtoMessage() {}

func (x *IndexSearchReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_index_v1_index_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexSearchReply.ProtoReflect.Descriptor instead.
func (*IndexSearchReply) Descriptor() ([]byte, []int) {
	return file_proto_index_v1_index_proto_rawDescGZIP(), []int{5}
}

func (x *IndexSearchReply) GetRef() string {
	if x != nil {
		return x.Ref
	}
	return ""
}

func (x *IndexSearchReply) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *IndexSearchReply) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type IndexSearchReplies struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*IndexSearchReply `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Total   int32               `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *IndexSearchReplies) Reset() {
	*x = IndexSearchReplies{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_index_v1_index_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexSearchReplies) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexSearchReplies) ProtoMessage() {}

func (x *IndexSearchReplies) ProtoReflect() protoreflect.Message {
	mi := &file_proto_index_v1_index_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexSearchReplies.ProtoReflect.Descriptor instead.
func (*IndexSearchReplies) Descriptor() ([]byte, []int) {
	return file_proto_index_v1_index_proto_rawDescGZIP(), []int{6}
}

func (x *IndexSearchReplies) GetResults() []*IndexSearchReply {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *IndexSearchReplies) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type IndexSearchRequest_Page struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number int32 `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	Limit  int32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *IndexSearchRequest_Page) Reset() {
	*x = IndexSearchRequest_Page{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_index_v1_index_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexSearchRequest_Page) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexSearchRequest_Page) ProtoMessage() {}

func (x *IndexSearchRequest_Page) ProtoReflect() protoreflect.Message {
	mi := &file_proto_index_v1_index_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexSearchRequest_Page.ProtoReflect.Descriptor instead.
func (*IndexSearchRequest_Page) Descriptor() ([]byte, []int) {
	return file_proto_index_v1_index_proto_rawDescGZIP(), []int{1, 0}
}

func (x *IndexSearchRequest_Page) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *IndexSearchRequest_Page) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type IndexReply_Company struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                int64                         `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Ticker            string                        `protobuf:"bytes,2,opt,name=ticker,proto3" json:"ticker,omitempty"`
	TickerAlternative string                        `protobuf:"bytes,3,opt,name=ticker_alternative,json=tickerAlternative,proto3" json:"ticker_alternative,omitempty"`
	Name              string                        `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Isin              string                        `protobuf:"bytes,5,opt,name=isin,proto3" json:"isin,omitempty"`
	Exchange          string                        `protobuf:"bytes,6,opt,name=exchange,proto3" json:"exchange,omitempty"`
	Adr               bool                          `protobuf:"varint,7,opt,name=adr,proto3" json:"adr,omitempty"`
	Activity          *IndexReply_Company_Activity  `protobuf:"bytes,8,opt,name=activity,proto3" json:"activity,omitempty"`
	Shares            *IndexReply_Company_Shares    `protobuf:"bytes,9,opt,name=shares,proto3" json:"shares,omitempty"`
	Pricing           *IndexReply_Company_Pricing   `protobuf:"bytes,10,opt,name=pricing,proto3" json:"pricing,omitempty"`
	Dividends         *IndexReply_Company_Dividends `protobuf:"bytes,11,opt,name=dividends,proto3" json:"dividends,omitempty"`
	Volume            *IndexReply_Company_Volume    `protobuf:"bytes,12,opt,name=volume,proto3" json:"volume,omitempty"`
}

func (x *IndexReply_Company) Reset() {
	*x = IndexReply_Company{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_index_v1_index_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexReply_Company) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexReply_Company) ProtoMessage() {}

func (x *IndexReply_Company) ProtoReflect() protoreflect.Message {
	mi := &file_proto_index_v1_index_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexReply_Company.ProtoReflect.Descriptor instead.
func (*IndexReply_Company) Descriptor() ([]byte, []int) {
	return file_proto_index_v1_index_proto_rawDescGZIP(), []int{3, 0}
}

func (x *IndexReply_Company) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *IndexReply_Company) GetTicker() string {
	if x != nil {
		return x.Ticker
	}
	return ""
}

func (x *IndexReply_Company) GetTickerAlternative() string {
	if x != nil {
		return x.TickerAlternative
	}
	return ""
}

func (x *IndexReply_Company) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *IndexReply_Company) GetIsin() string {
	if x != nil {
		return x.Isin
	}
	return ""
}

func (x *IndexReply_Company) GetExchange() string {
	if x != nil {
		return x.Exchange
	}
	return ""
}

func (x *IndexReply_Company) GetAdr() bool {
	if x != nil {
		return x.Adr
	}
	return false
}

func (x *IndexReply_Company) GetActivity() *IndexReply_Company_Activity {
	if x != nil {
		return x.Activity
	}
	return nil
}

func (x *IndexReply_Company) GetShares() *IndexReply_Company_Shares {
	if x != nil {
		return x.Shares
	}
	return nil
}

func (x *IndexReply_Company) GetPricing() *IndexReply_Company_Pricing {
	if x != nil {
		return x.Pricing
	}
	return nil
}

func (x *IndexReply_Company) GetDividends() *IndexReply_Company_Dividends {
	if x != nil {
		return x.Dividends
	}
	return nil
}

func (x *IndexReply_Company) GetVolume() *IndexReply_Company_Volume {
	if x != nil {
		return x.Volume
	}
	return nil
}

type IndexReply_Company_Activity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EconomicSector int64 `protobuf:"varint,1,opt,name=economicSector,proto3" json:"economicSector,omitempty"`
	BusinessSector int64 `protobuf:"varint,2,opt,name=businessSector,proto3" json:"businessSector,omitempty"`
	IndustryGroup  int64 `protobuf:"varint,3,opt,name=industryGroup,proto3" json:"industryGroup,omitempty"`
	Industry       int64 `protobuf:"varint,4,opt,name=industry,proto3" json:"industry,omitempty"`
	Activity       int64 `protobuf:"varint,5,opt,name=activity,proto3" json:"activity,omitempty"`
}

func (x *IndexReply_Company_Activity) Reset() {
	*x = IndexReply_Company_Activity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_index_v1_index_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexReply_Company_Activity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexReply_Company_Activity) ProtoMessage() {}

func (x *IndexReply_Company_Activity) ProtoReflect() protoreflect.Message {
	mi := &file_proto_index_v1_index_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexReply_Company_Activity.ProtoReflect.Descriptor instead.
func (*IndexReply_Company_Activity) Descriptor() ([]byte, []int) {
	return file_proto_index_v1_index_proto_rawDescGZIP(), []int{3, 0, 0}
}

func (x *IndexReply_Company_Activity) GetEconomicSector() int64 {
	if x != nil {
		return x.EconomicSector
	}
	return 0
}

func (x *IndexReply_Company_Activity) GetBusinessSector() int64 {
	if x != nil {
		return x.BusinessSector
	}
	return 0
}

func (x *IndexReply_Company_Activity) GetIndustryGroup() int64 {
	if x != nil {
		return x.IndustryGroup
	}
	return 0
}

func (x *IndexReply_Company_Activity) GetIndustry() int64 {
	if x != nil {
		return x.Industry
	}
	return 0
}

func (x *IndexReply_Company_Activity) GetActivity() int64 {
	if x != nil {
		return x.Activity
	}
	return 0
}

type IndexReply_Company_Shares struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Outstanding int64 `protobuf:"varint,1,opt,name=outstanding,proto3" json:"outstanding,omitempty"`
	Float       int64 `protobuf:"varint,2,opt,name=float,proto3" json:"float,omitempty"`
}

func (x *IndexReply_Company_Shares) Reset() {
	*x = IndexReply_Company_Shares{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_index_v1_index_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexReply_Company_Shares) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexReply_Company_Shares) ProtoMessage() {}

func (x *IndexReply_Company_Shares) ProtoReflect() protoreflect.Message {
	mi := &file_proto_index_v1_index_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexReply_Company_Shares.ProtoReflect.Descriptor instead.
func (*IndexReply_Company_Shares) Descriptor() ([]byte, []int) {
	return file_proto_index_v1_index_proto_rawDescGZIP(), []int{3, 0, 1}
}

func (x *IndexReply_Company_Shares) GetOutstanding() int64 {
	if x != nil {
		return x.Outstanding
	}
	return 0
}

func (x *IndexReply_Company_Shares) GetFloat() int64 {
	if x != nil {
		return x.Float
	}
	return 0
}

type IndexReply_Company_Pricing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Last       float32 `protobuf:"fixed32,1,opt,name=last,proto3" json:"last,omitempty"`
	MinYear    float32 `protobuf:"fixed32,2,opt,name=minYear,proto3" json:"minYear,omitempty"`
	MaxYear    float32 `protobuf:"fixed32,3,opt,name=maxYear,proto3" json:"maxYear,omitempty"`
	ReturnYear float32 `protobuf:"fixed32,4,opt,name=returnYear,proto3" json:"returnYear,omitempty"`
	Marketcap  int64   `protobuf:"varint,5,opt,name=marketcap,proto3" json:"marketcap,omitempty"`
	Beta5Y     float32 `protobuf:"fixed32,6,opt,name=beta5y,proto3" json:"beta5y,omitempty"`
}

func (x *IndexReply_Company_Pricing) Reset() {
	*x = IndexReply_Company_Pricing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_index_v1_index_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexReply_Company_Pricing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexReply_Company_Pricing) ProtoMessage() {}

func (x *IndexReply_Company_Pricing) ProtoReflect() protoreflect.Message {
	mi := &file_proto_index_v1_index_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexReply_Company_Pricing.ProtoReflect.Descriptor instead.
func (*IndexReply_Company_Pricing) Descriptor() ([]byte, []int) {
	return file_proto_index_v1_index_proto_rawDescGZIP(), []int{3, 0, 2}
}

func (x *IndexReply_Company_Pricing) GetLast() float32 {
	if x != nil {
		return x.Last
	}
	return 0
}

func (x *IndexReply_Company_Pricing) GetMinYear() float32 {
	if x != nil {
		return x.MinYear
	}
	return 0
}

func (x *IndexReply_Company_Pricing) GetMaxYear() float32 {
	if x != nil {
		return x.MaxYear
	}
	return 0
}

func (x *IndexReply_Company_Pricing) GetReturnYear() float32 {
	if x != nil {
		return x.ReturnYear
	}
	return 0
}

func (x *IndexReply_Company_Pricing) GetMarketcap() int64 {
	if x != nil {
		return x.Marketcap
	}
	return 0
}

func (x *IndexReply_Company_Pricing) GetBeta5Y() float32 {
	if x != nil {
		return x.Beta5Y
	}
	return 0
}

type IndexReply_Company_Volume struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Last          float32 `protobuf:"fixed32,1,opt,name=last,proto3" json:"last,omitempty"`
	Avg10D        float32 `protobuf:"fixed32,2,opt,name=avg10d,proto3" json:"avg10d,omitempty"`
	Avg90D        float32 `protobuf:"fixed32,3,opt,name=avg90d,proto3" json:"avg90d,omitempty"`
	Share10DRatio float32 `protobuf:"fixed32,4,opt,name=share10dRatio,proto3" json:"share10dRatio,omitempty"`
	Share90DRatio float32 `protobuf:"fixed32,5,opt,name=share90dRatio,proto3" json:"share90dRatio,omitempty"`
}

func (x *IndexReply_Company_Volume) Reset() {
	*x = IndexReply_Company_Volume{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_index_v1_index_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexReply_Company_Volume) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexReply_Company_Volume) ProtoMessage() {}

func (x *IndexReply_Company_Volume) ProtoReflect() protoreflect.Message {
	mi := &file_proto_index_v1_index_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexReply_Company_Volume.ProtoReflect.Descriptor instead.
func (*IndexReply_Company_Volume) Descriptor() ([]byte, []int) {
	return file_proto_index_v1_index_proto_rawDescGZIP(), []int{3, 0, 3}
}

func (x *IndexReply_Company_Volume) GetLast() float32 {
	if x != nil {
		return x.Last
	}
	return 0
}

func (x *IndexReply_Company_Volume) GetAvg10D() float32 {
	if x != nil {
		return x.Avg10D
	}
	return 0
}

func (x *IndexReply_Company_Volume) GetAvg90D() float32 {
	if x != nil {
		return x.Avg90D
	}
	return 0
}

func (x *IndexReply_Company_Volume) GetShare10DRatio() float32 {
	if x != nil {
		return x.Share10DRatio
	}
	return 0
}

func (x *IndexReply_Company_Volume) GetShare90DRatio() float32 {
	if x != nil {
		return x.Share90DRatio
	}
	return 0
}

type IndexReply_Company_Dividends struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Yield  float32 `protobuf:"fixed32,1,opt,name=yield,proto3" json:"yield,omitempty"`
	Annual float32 `protobuf:"fixed32,2,opt,name=annual,proto3" json:"annual,omitempty"`
}

func (x *IndexReply_Company_Dividends) Reset() {
	*x = IndexReply_Company_Dividends{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_index_v1_index_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IndexReply_Company_Dividends) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexReply_Company_Dividends) ProtoMessage() {}

func (x *IndexReply_Company_Dividends) ProtoReflect() protoreflect.Message {
	mi := &file_proto_index_v1_index_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexReply_Company_Dividends.ProtoReflect.Descriptor instead.
func (*IndexReply_Company_Dividends) Descriptor() ([]byte, []int) {
	return file_proto_index_v1_index_proto_rawDescGZIP(), []int{3, 0, 4}
}

func (x *IndexReply_Company_Dividends) GetYield() float32 {
	if x != nil {
		return x.Yield
	}
	return 0
}

func (x *IndexReply_Company_Dividends) GetAnnual() float32 {
	if x != nil {
		return x.Annual
	}
	return 0
}

var File_proto_index_v1_index_proto protoreflect.FileDescriptor

var file_proto_index_v1_index_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x76, 0x31,
	0x2f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x2b, 0x0a, 0x0c, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x03, 0x72,
	0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10,
	0x02, 0x18, 0x20, 0x52, 0x03, 0x72, 0x65, 0x66, 0x22, 0xe1, 0x01, 0x0a, 0x12, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x24, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x98, 0x01, 0x03, 0x52, 0x08, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x12, 0x3f, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x42, 0x08,
	0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x1a, 0x4c,
	0x0a, 0x04, 0x50, 0x61, 0x67, 0x65, 0x12, 0x22, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x1a, 0x05, 0x18, 0x90, 0x4e,
	0x20, 0x00, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x1a, 0x05,
	0x18, 0x96, 0x01, 0x20, 0x00, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0xe2, 0x01, 0x0a,
	0x12, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x03, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x01, 0x18, 0x20, 0x52, 0x03, 0x72, 0x65, 0x66,
	0x12, 0x1d, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09,
	0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x03, 0x18, 0x20, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x2c, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x08, 0x18, 0x80, 0x01,
	0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a,
	0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0x98, 0x01, 0x03, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x12, 0x24, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0a, 0xfa, 0x42, 0x07, 0x72, 0x05, 0x10, 0x08, 0x18, 0x84, 0x40,
	0x52, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x22, 0xb3, 0x0b, 0x0a, 0x0a, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x72,
	0x65, 0x66, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x12, 0x3a, 0x0a, 0x09,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x52, 0x09, 0x63,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x69, 0x65, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x1a, 0xf6,
	0x08, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x69,
	0x63, 0x6b, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x69, 0x63, 0x6b,
	0x65, 0x72, 0x12, 0x2d, 0x0a, 0x12, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x61, 0x6c, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x41, 0x6c, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x74, 0x69, 0x76,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x73, 0x69, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x73, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x64, 0x72, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x03, 0x61, 0x64, 0x72, 0x12, 0x41, 0x0a, 0x08, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x69, 0x74, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79,
	0x52, 0x08, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x3b, 0x0a, 0x06, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x73, 0x52,
	0x06, 0x73, 0x68, 0x61, 0x72, 0x65, 0x73, 0x12, 0x3e, 0x0a, 0x07, 0x70, 0x72, 0x69, 0x63, 0x69,
	0x6e, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x43,
	0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x69, 0x6e, 0x67, 0x52, 0x07,
	0x70, 0x72, 0x69, 0x63, 0x69, 0x6e, 0x67, 0x12, 0x44, 0x0a, 0x09, 0x64, 0x69, 0x76, 0x69, 0x64,
	0x65, 0x6e, 0x64, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x44, 0x69, 0x76, 0x69, 0x64, 0x65, 0x6e,
	0x64, 0x73, 0x52, 0x09, 0x64, 0x69, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x64, 0x73, 0x12, 0x3b, 0x0a,
	0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2e, 0x56, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x52, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x1a, 0xb8, 0x01, 0x0a, 0x08, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x26, 0x0a, 0x0e, 0x65, 0x63, 0x6f, 0x6e, 0x6f,
	0x6d, 0x69, 0x63, 0x53, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0e, 0x65, 0x63, 0x6f, 0x6e, 0x6f, 0x6d, 0x69, 0x63, 0x53, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12,
	0x26, 0x0a, 0x0e, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x53, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x53, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x24, 0x0a, 0x0d, 0x69, 0x6e, 0x64, 0x75, 0x73,
	0x74, 0x72, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d,
	0x69, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x1a, 0x0a,
	0x08, 0x69, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x69, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x69, 0x74, 0x79, 0x1a, 0x40, 0x0a, 0x06, 0x53, 0x68, 0x61, 0x72, 0x65, 0x73, 0x12,
	0x20, 0x0a, 0x0b, 0x6f, 0x75, 0x74, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6f, 0x75, 0x74, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x1a, 0xa7, 0x01, 0x0a, 0x07, 0x50, 0x72, 0x69, 0x63,
	0x69, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x04, 0x6c, 0x61, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x69, 0x6e, 0x59, 0x65,
	0x61, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x6d, 0x69, 0x6e, 0x59, 0x65, 0x61,
	0x72, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x78, 0x59, 0x65, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x07, 0x6d, 0x61, 0x78, 0x59, 0x65, 0x61, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x72,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x59, 0x65, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x0a, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x59, 0x65, 0x61, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x6d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x63, 0x61, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x63, 0x61, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x65, 0x74,
	0x61, 0x35, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x62, 0x65, 0x74, 0x61, 0x35,
	0x79, 0x1a, 0x98, 0x01, 0x0a, 0x06, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6c, 0x61, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x6c, 0x61, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x67, 0x31, 0x30, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x06, 0x61, 0x76, 0x67, 0x31, 0x30, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x67, 0x39,
	0x30, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x61, 0x76, 0x67, 0x39, 0x30, 0x64,
	0x12, 0x24, 0x0a, 0x0d, 0x73, 0x68, 0x61, 0x72, 0x65, 0x31, 0x30, 0x64, 0x52, 0x61, 0x74, 0x69,
	0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x73, 0x68, 0x61, 0x72, 0x65, 0x31, 0x30,
	0x64, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x68, 0x61, 0x72, 0x65, 0x39,
	0x30, 0x64, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x39, 0x30, 0x64, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x1a, 0x39, 0x0a, 0x09,
	0x44, 0x69, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x79, 0x69, 0x65,
	0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x79, 0x69, 0x65, 0x6c, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x61, 0x6e, 0x6e, 0x75, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x06, 0x61, 0x6e, 0x6e, 0x75, 0x61, 0x6c, 0x22, 0x54, 0x0a, 0x0c, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x52, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x07,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x5a, 0x0a,
	0x10, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x66, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x72, 0x65, 0x66, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x60, 0x0a, 0x12, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x12,
	0x34, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x52, 0x07, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x32, 0xf3, 0x03, 0x0a, 0x05,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x4c, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x16, 0x2e, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x2e,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x17, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x11, 0x12, 0x0f, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2f, 0x7b, 0x72,
	0x65, 0x66, 0x7d, 0x12, 0x57, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x1c, 0x2e,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x52, 0x65, 0x70, 0x6c, 0x69, 0x65, 0x73, 0x22, 0x11, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x0b, 0x12, 0x09, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x52, 0x0a, 0x06,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x2e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x76,
	0x31, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x2e,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x14, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x0e, 0x22, 0x09, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x3a, 0x01, 0x2a,
	0x12, 0x52, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x2e, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x14,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0e, 0x1a, 0x09, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6e, 0x64, 0x65,
	0x78, 0x3a, 0x01, 0x2a, 0x12, 0x4f, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x16,
	0x2e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x76,
	0x31, 0x2e, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x17, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x11, 0x2a, 0x0f, 0x2f, 0x76, 0x31, 0x2f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2f,
	0x7b, 0x72, 0x65, 0x66, 0x7d, 0x12, 0x4a, 0x0a, 0x06, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x12,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x10, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0a, 0x12, 0x08, 0x2f, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68,
	0x7a, 0x42, 0x43, 0x0a, 0x17, 0x64, 0x65, 0x76, 0x2e, 0x6b, 0x72, 0x61, 0x74, 0x6f, 0x73, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x2e, 0x76, 0x31, 0x42, 0x0c, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x56, 0x31, 0x50, 0x01, 0x5a, 0x18, 0x67, 0x72,
	0x70, 0x63, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_index_v1_index_proto_rawDescOnce sync.Once
	file_proto_index_v1_index_proto_rawDescData = file_proto_index_v1_index_proto_rawDesc
)

func file_proto_index_v1_index_proto_rawDescGZIP() []byte {
	file_proto_index_v1_index_proto_rawDescOnce.Do(func() {
		file_proto_index_v1_index_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_index_v1_index_proto_rawDescData)
	})
	return file_proto_index_v1_index_proto_rawDescData
}

var file_proto_index_v1_index_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_proto_index_v1_index_proto_goTypes = []interface{}{
	(*IndexRequest)(nil),                 // 0: index.v1.IndexRequest
	(*IndexSearchRequest)(nil),           // 1: index.v1.IndexSearchRequest
	(*IndexCreateRequest)(nil),           // 2: index.v1.IndexCreateRequest
	(*IndexReply)(nil),                   // 3: index.v1.IndexReply
	(*IndexReplies)(nil),                 // 4: index.v1.IndexReplies
	(*IndexSearchReply)(nil),             // 5: index.v1.IndexSearchReply
	(*IndexSearchReplies)(nil),           // 6: index.v1.IndexSearchReplies
	(*IndexSearchRequest_Page)(nil),      // 7: index.v1.IndexSearchRequest.Page
	(*IndexReply_Company)(nil),           // 8: index.v1.IndexReply.Company
	(*IndexReply_Company_Activity)(nil),  // 9: index.v1.IndexReply.Company.Activity
	(*IndexReply_Company_Shares)(nil),    // 10: index.v1.IndexReply.Company.Shares
	(*IndexReply_Company_Pricing)(nil),   // 11: index.v1.IndexReply.Company.Pricing
	(*IndexReply_Company_Volume)(nil),    // 12: index.v1.IndexReply.Company.Volume
	(*IndexReply_Company_Dividends)(nil), // 13: index.v1.IndexReply.Company.Dividends
	(*timestamppb.Timestamp)(nil),        // 14: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),                // 15: google.protobuf.Empty
}
var file_proto_index_v1_index_proto_depIdxs = []int32{
	7,  // 0: index.v1.IndexSearchRequest.page:type_name -> index.v1.IndexSearchRequest.Page
	8,  // 1: index.v1.IndexReply.companies:type_name -> index.v1.IndexReply.Company
	14, // 2: index.v1.IndexReply.created_at:type_name -> google.protobuf.Timestamp
	14, // 3: index.v1.IndexReply.updated_at:type_name -> google.protobuf.Timestamp
	3,  // 4: index.v1.IndexReplies.results:type_name -> index.v1.IndexReply
	5,  // 5: index.v1.IndexSearchReplies.results:type_name -> index.v1.IndexSearchReply
	9,  // 6: index.v1.IndexReply.Company.activity:type_name -> index.v1.IndexReply.Company.Activity
	10, // 7: index.v1.IndexReply.Company.shares:type_name -> index.v1.IndexReply.Company.Shares
	11, // 8: index.v1.IndexReply.Company.pricing:type_name -> index.v1.IndexReply.Company.Pricing
	13, // 9: index.v1.IndexReply.Company.dividends:type_name -> index.v1.IndexReply.Company.Dividends
	12, // 10: index.v1.IndexReply.Company.volume:type_name -> index.v1.IndexReply.Company.Volume
	0,  // 11: index.v1.Index.Get:input_type -> index.v1.IndexRequest
	1,  // 12: index.v1.Index.Search:input_type -> index.v1.IndexSearchRequest
	2,  // 13: index.v1.Index.Create:input_type -> index.v1.IndexCreateRequest
	2,  // 14: index.v1.Index.Update:input_type -> index.v1.IndexCreateRequest
	0,  // 15: index.v1.Index.Delete:input_type -> index.v1.IndexRequest
	15, // 16: index.v1.Index.Health:input_type -> google.protobuf.Empty
	3,  // 17: index.v1.Index.Get:output_type -> index.v1.IndexReply
	6,  // 18: index.v1.Index.Search:output_type -> index.v1.IndexSearchReplies
	3,  // 19: index.v1.Index.Create:output_type -> index.v1.IndexReply
	3,  // 20: index.v1.Index.Update:output_type -> index.v1.IndexReply
	3,  // 21: index.v1.Index.Delete:output_type -> index.v1.IndexReply
	15, // 22: index.v1.Index.Health:output_type -> google.protobuf.Empty
	17, // [17:23] is the sub-list for method output_type
	11, // [11:17] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_proto_index_v1_index_proto_init() }
func file_proto_index_v1_index_proto_init() {
	if File_proto_index_v1_index_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_index_v1_index_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_index_v1_index_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexSearchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_index_v1_index_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexCreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_index_v1_index_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_index_v1_index_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexReplies); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_index_v1_index_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexSearchReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_index_v1_index_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexSearchReplies); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_index_v1_index_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexSearchRequest_Page); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_index_v1_index_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexReply_Company); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_index_v1_index_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexReply_Company_Activity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_index_v1_index_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexReply_Company_Shares); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_index_v1_index_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexReply_Company_Pricing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_index_v1_index_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexReply_Company_Volume); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_index_v1_index_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IndexReply_Company_Dividends); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_index_v1_index_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_index_v1_index_proto_goTypes,
		DependencyIndexes: file_proto_index_v1_index_proto_depIdxs,
		MessageInfos:      file_proto_index_v1_index_proto_msgTypes,
	}.Build()
	File_proto_index_v1_index_proto = out.File
	file_proto_index_v1_index_proto_rawDesc = nil
	file_proto_index_v1_index_proto_goTypes = nil
	file_proto_index_v1_index_proto_depIdxs = nil
}
