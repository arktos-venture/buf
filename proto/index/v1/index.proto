syntax = "proto3";

package index.v1;

import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "validate/validate.proto";

option go_package = "grpc-api/api/index/v1;v1";
option java_multiple_files = true;
option java_package = "dev.kratos.api.index.v1";
option java_outer_classname = "IndexProtoV1";

service Index {
  rpc Get (IndexRequest) returns (IndexReply)  {
    option (google.api.http) = {
      get: "/v1/index/{ref}"
    };
  }

  rpc Search (IndexSearchRequest) returns (IndexSearchReplies)  {
    option (google.api.http) = {
      get: "/v1/index"
    };
  }

  rpc Create (IndexCreateRequest) returns (IndexReply)  {
    option (google.api.http) = {
      post: "/v1/index"
      body: "*"
    };
  }

  rpc Update (IndexCreateRequest) returns (IndexReply)  {
    option (google.api.http) = {
      put: "/v1/index"
      body: "*"
    };
  }

  rpc Delete (IndexRequest) returns (IndexReply)  {
    option (google.api.http) = {
      delete: "/v1/index/{ref}"
    };
  }

  rpc Health (google.protobuf.Empty) returns (google.protobuf.Empty)  {
		option (google.api.http) = {
			get: "/healthz"
		};
	}
}


// 
// Request
// 

message IndexRequest {
  string ref = 1 [(validate.rules).string = {min_len: 2, max_len: 32}];
}

message IndexSearchRequest {
  message Page {
    int32 number = 1 [(validate.rules).int32 = {gt: 0, lte: 10000}];
    int32 limit = 2 [(validate.rules).int32 = {gt: 0, lte: 150}];
  }
  
  string currency = 1 [(validate.rules).string.len = 3];
  bool public = 2;
  Page page = 3 [(validate.rules).message.required = true];
}

message IndexCreateRequest {
  string ref = 1 [(validate.rules).string = {min_len: 1, max_len: 32}];
  string name = 2 [(validate.rules).string = {min_len: 3, max_len: 32}];
  string description = 3 [(validate.rules).string = {min_len: 8, max_len: 128}];
  string currency = 4 [(validate.rules).string.len = 3];
  string request = 5 [(validate.rules).string = {min_len: 8, max_len: 8196}];
  bool public = 6;
}


// 
// Reply
// 

message IndexReply {
  message Company {
    message Activity {
      int64 economicSector = 1; 
      int64 businessSector = 2;
      int64 industryGroup = 3;
      int64 industry = 4;
      int64 activity = 5;
    }

    message Shares {
      int64 outstanding = 1;
      int64 float = 2;
    }
  
    message Pricing {
      float last = 1;
      float minYear = 2;
      float maxYear = 3;
      float returnYear = 4;
      int64 marketcap = 5;
      float beta5y = 6;
    }
  
    message Volume {
      float last = 1;
      float avg10d = 2;
      float avg90d = 3;
      float share10dRatio = 4;
      float share90dRatio = 5;
    }
  
    message Dividends {
      float yield = 1;
      float annual = 2;
    }

    int64 id = 1;
    string ticker = 2;
    string ticker_alternative = 3;
    string name = 4;
    string isin = 5;
    string exchange = 6;
    bool adr = 7;
    Activity activity = 8;
    Shares shares = 9;
    Pricing pricing = 10;
    Dividends dividends = 11;
    Volume volume = 12;
  }

  string ref = 1;
  string name = 2;
  string description = 3;
  string currency = 4;
  bool public = 5;
  repeated Company companies = 6;
	google.protobuf.Timestamp created_at = 7;
	google.protobuf.Timestamp updated_at = 8;
}

message IndexReplies {
  repeated IndexReply results = 1;
  int32 total = 2;
}

message IndexSearchReply {
  string ref = 1;
  string name = 2;
  string description = 3;
}

message IndexSearchReplies {
  repeated IndexSearchReply results = 1;
  int32 total = 2;
}