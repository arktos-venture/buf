syntax = "proto3";

package positions.v1;

import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "validate/validate.proto";

option go_package = "grpc-api/api/positions/v1;v1";
option java_multiple_files = true;
option java_package = "dev.kratos.api.positions.v1";
option java_outer_classname = "PositionProtoV1";

service Position {
  rpc SearchCompanies (PositionRequest) returns (PositionCompanyReplies)  {
    option (google.api.http) = {
      get: "/v1/{broker}/positions/{account}/companies"
    };
  }

  rpc SearchCurrencies (PositionRequest) returns (PositionCurrencyReplies)  {
    option (google.api.http) = {
      get: "/v1/{broker}/positions/{account}/currencies"
    };
  }

	rpc Health (google.protobuf.Empty) returns (google.protobuf.Empty)  {
    option (google.api.http) = {
      get: "/healthz"
    };
  }
}

enum Broker {
  IBKR = 0;
}

message PositionRequest {
  Broker broker = 1 [(validate.rules).enum = {defined_only: true}];
  string account = 2 [(validate.rules).string = {min_len: 3, max_len: 15}];
  string interval = 3 [(validate.rules).string = {in: ["last", "3d", "1w", "2w", "1m", "3m", "6m", "1y", "3y", "5y", "10y"]}];
}

message PositionCompanyReply {
  int64 conid = 1;
  string currency = 2;
  float size = 3;
  float average_cost = 4;
  float market_price = 5;
  float performance = 6;
  int64 date = 7;
}

message PositionCompanyReplies {
  repeated PositionCompanyReply results = 1;
  int32 total = 2;
  int64 date = 3;
}

message PositionCurrencyReply {
  string currency = 1;
  float size = 2;
  int64 date = 3;
}

message PositionCurrencyReplies {
  repeated PositionCurrencyReply results = 1;
  int32 total = 2;
  int64 date = 3;
}