syntax = "proto3";

package positions.v1;

import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "validate/validate.proto";

option go_package = "github.com/arktos-venture/buf/proto/positions/v1;positions_v1";
option java_multiple_files = true;
option java_package = "dev.kratos.api.positions.v1";
option java_outer_classname = "APIPositionsProtoV1";

service Position {
  rpc Companies (PositionRequest) returns (PositionCompanyReplies)  {
    option (google.api.http) = {
      get: "/v1/positions/{account}/companies"
    };
  }

  rpc Currencies (PositionRequest) returns (PositionCurrencyReplies)  {
    option (google.api.http) = {
      get: "/v1/positions/{account}/currencies"
    };
  }

	rpc Health (google.protobuf.Empty) returns (google.protobuf.Empty)  {
    option (google.api.http) = {
      get: "/healthz"
    };
  }
}


// 
// Request
// 

message PositionRequest {
  string account = 1 [(validate.rules).string = {min_len: 3, max_len: 15}];
}


// 
// Reply
// 

message PositionCompanyReply {
  message Performance {
    float percent = 1;
    float money = 2;
  }

  message Cost {
    float unit = 1;
    float total = 2;
  }

  string ticker = 1;
  string exchange = 2;
  float size = 3;
  Cost cost = 4;
  Performance performance = 5;
  google.protobuf.Timestamp created_at = 6;
  google.protobuf.Timestamp updated_at = 7;
}

message PositionCompanyReplies {
  repeated PositionCompanyReply results = 1;
  int32 total = 2;
}

message PositionCurrencyReply {
  string currency = 1;
  float size = 2;
  google.protobuf.Timestamp created_at = 3;
  google.protobuf.Timestamp updated_at = 4;
}

message PositionCurrencyReplies {
  repeated PositionCurrencyReply results = 1;
  int32 total = 2;
}