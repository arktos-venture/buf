syntax = "proto3";

package indices.v1;

import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "validate/validate.proto";
import "proto/screener/v1/screener.proto";
import "proto/quotes/v1/quotes.proto";

option go_package = "github.com/arktos-venture/buf/proto/indices/v1;indices_v1";
option java_multiple_files = true;
option java_package = "dev.kratos.api.indices.v1";
option java_outer_classname = "APIIndicesProtoV1";

service Indices {
  rpc Get (IndicesRequest) returns (IndicesReply)  {
    option (google.api.http) = {
      get: "/v1/indice/{indice}"
    };
  }

  rpc List (IndicesExchangeRequest) returns (IndicesShortReplies)  {
    option (google.api.http) = {
      get: "/v1/indices/exchange/{exchange}"
    };
  }

  rpc Health (google.protobuf.Empty) returns (google.protobuf.Empty)  {
		option (google.api.http) = {
			get: "/healthz"
		};
	}
}


// 
// Request
// 

message IndicesRequest {
  string indice = 1 [(validate.rules).string = {min_len: 2, max_len: 16}];
}

message IndicesExchangeRequest {
  string exchange = 1 [(validate.rules).string = {min_len: 2, max_len: 16}];
}


// 
// Reply
// 

message IndicesReply {
  int64 id = 1;
  string ticker = 2;
  string name = 3;
  string description = 4;
  quotes.v1.QuotesLastReply quote = 5;
  repeated screener.v1.ScreenerReply companies = 6;
	google.protobuf.Timestamp created_at = 7;
	google.protobuf.Timestamp updated_at = 8;
}

message IndicesShortReply {
  int64 id = 1;
  string ticker = 2;
  string name = 3;
  string description = 4;
	google.protobuf.Timestamp created_at = 5;
	google.protobuf.Timestamp updated_at = 6;
}

message IndicesShortReplies {
  repeated IndicesShortReply results = 1;
  int32 total = 2;
}