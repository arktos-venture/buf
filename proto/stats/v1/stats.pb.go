// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.4
// source: proto/stats/v1/stats.proto

package stats_v1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Price struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Last       float32 `protobuf:"fixed32,1,opt,name=last,proto3" json:"last,omitempty"`
	MaxAnnual  float32 `protobuf:"fixed32,2,opt,name=max_annual,json=maxAnnual,proto3" json:"max_annual,omitempty"`
	MinAnnual  float32 `protobuf:"fixed32,3,opt,name=min_annual,json=minAnnual,proto3" json:"min_annual,omitempty"`
	ReturnYear float32 `protobuf:"fixed32,4,opt,name=return_year,json=returnYear,proto3" json:"return_year,omitempty"`
}

func (x *Price) Reset() {
	*x = Price{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_stats_v1_stats_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Price) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Price) ProtoMessage() {}

func (x *Price) ProtoReflect() protoreflect.Message {
	mi := &file_proto_stats_v1_stats_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Price.ProtoReflect.Descriptor instead.
func (*Price) Descriptor() ([]byte, []int) {
	return file_proto_stats_v1_stats_proto_rawDescGZIP(), []int{0}
}

func (x *Price) GetLast() float32 {
	if x != nil {
		return x.Last
	}
	return 0
}

func (x *Price) GetMaxAnnual() float32 {
	if x != nil {
		return x.MaxAnnual
	}
	return 0
}

func (x *Price) GetMinAnnual() float32 {
	if x != nil {
		return x.MinAnnual
	}
	return 0
}

func (x *Price) GetReturnYear() float32 {
	if x != nil {
		return x.ReturnYear
	}
	return 0
}

type Volume struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Last      float32 `protobuf:"fixed32,1,opt,name=last,proto3" json:"last,omitempty"`
	Volume10D float32 `protobuf:"fixed32,2,opt,name=volume10d,proto3" json:"volume10d,omitempty"`
	Volume30D float32 `protobuf:"fixed32,3,opt,name=volume30d,proto3" json:"volume30d,omitempty"`
	Volume90D float32 `protobuf:"fixed32,4,opt,name=volume90d,proto3" json:"volume90d,omitempty"`
}

func (x *Volume) Reset() {
	*x = Volume{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_stats_v1_stats_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Volume) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Volume) ProtoMessage() {}

func (x *Volume) ProtoReflect() protoreflect.Message {
	mi := &file_proto_stats_v1_stats_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Volume.ProtoReflect.Descriptor instead.
func (*Volume) Descriptor() ([]byte, []int) {
	return file_proto_stats_v1_stats_proto_rawDescGZIP(), []int{1}
}

func (x *Volume) GetLast() float32 {
	if x != nil {
		return x.Last
	}
	return 0
}

func (x *Volume) GetVolume10D() float32 {
	if x != nil {
		return x.Volume10D
	}
	return 0
}

func (x *Volume) GetVolume30D() float32 {
	if x != nil {
		return x.Volume30D
	}
	return 0
}

func (x *Volume) GetVolume90D() float32 {
	if x != nil {
		return x.Volume90D
	}
	return 0
}

type Dividend struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Yield float32 `protobuf:"fixed32,1,opt,name=yield,proto3" json:"yield,omitempty"`
	Value float32 `protobuf:"fixed32,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Dividend) Reset() {
	*x = Dividend{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_stats_v1_stats_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Dividend) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dividend) ProtoMessage() {}

func (x *Dividend) ProtoReflect() protoreflect.Message {
	mi := &file_proto_stats_v1_stats_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dividend.ProtoReflect.Descriptor instead.
func (*Dividend) Descriptor() ([]byte, []int) {
	return file_proto_stats_v1_stats_proto_rawDescGZIP(), []int{2}
}

func (x *Dividend) GetYield() float32 {
	if x != nil {
		return x.Yield
	}
	return 0
}

func (x *Dividend) GetValue() float32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type Share struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Out   int64 `protobuf:"varint,1,opt,name=out,proto3" json:"out,omitempty"`
	Float int64 `protobuf:"varint,2,opt,name=float,proto3" json:"float,omitempty"`
}

func (x *Share) Reset() {
	*x = Share{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_stats_v1_stats_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Share) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Share) ProtoMessage() {}

func (x *Share) ProtoReflect() protoreflect.Message {
	mi := &file_proto_stats_v1_stats_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Share.ProtoReflect.Descriptor instead.
func (*Share) Descriptor() ([]byte, []int) {
	return file_proto_stats_v1_stats_proto_rawDescGZIP(), []int{3}
}

func (x *Share) GetOut() int64 {
	if x != nil {
		return x.Out
	}
	return 0
}

func (x *Share) GetFloat() int64 {
	if x != nil {
		return x.Float
	}
	return 0
}

type StatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ticker   string `protobuf:"bytes,1,opt,name=ticker,proto3" json:"ticker,omitempty"`
	Exchange string `protobuf:"bytes,2,opt,name=exchange,proto3" json:"exchange,omitempty"`
}

func (x *StatRequest) Reset() {
	*x = StatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_stats_v1_stats_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatRequest) ProtoMessage() {}

func (x *StatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_stats_v1_stats_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatRequest.ProtoReflect.Descriptor instead.
func (*StatRequest) Descriptor() ([]byte, []int) {
	return file_proto_stats_v1_stats_proto_rawDescGZIP(), []int{4}
}

func (x *StatRequest) GetTicker() string {
	if x != nil {
		return x.Ticker
	}
	return ""
}

func (x *StatRequest) GetExchange() string {
	if x != nil {
		return x.Exchange
	}
	return ""
}

type StatModifyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ticker       string    `protobuf:"bytes,1,opt,name=ticker,proto3" json:"ticker,omitempty"`
	Exchange     string    `protobuf:"bytes,2,opt,name=exchange,proto3" json:"exchange,omitempty"`
	MarketCapUsd int64     `protobuf:"varint,3,opt,name=marketCapUsd,proto3" json:"marketCapUsd,omitempty"`
	Price        *Price    `protobuf:"bytes,4,opt,name=price,proto3" json:"price,omitempty"`
	Volume       *Volume   `protobuf:"bytes,5,opt,name=volume,proto3" json:"volume,omitempty"`
	Shares       *Share    `protobuf:"bytes,6,opt,name=shares,proto3" json:"shares,omitempty"`
	Dividends    *Dividend `protobuf:"bytes,7,opt,name=dividends,proto3" json:"dividends,omitempty"`
	Beta5Y       float32   `protobuf:"fixed32,8,opt,name=beta5y,proto3" json:"beta5y,omitempty"`
}

func (x *StatModifyRequest) Reset() {
	*x = StatModifyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_stats_v1_stats_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatModifyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatModifyRequest) ProtoMessage() {}

func (x *StatModifyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_stats_v1_stats_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatModifyRequest.ProtoReflect.Descriptor instead.
func (*StatModifyRequest) Descriptor() ([]byte, []int) {
	return file_proto_stats_v1_stats_proto_rawDescGZIP(), []int{5}
}

func (x *StatModifyRequest) GetTicker() string {
	if x != nil {
		return x.Ticker
	}
	return ""
}

func (x *StatModifyRequest) GetExchange() string {
	if x != nil {
		return x.Exchange
	}
	return ""
}

func (x *StatModifyRequest) GetMarketCapUsd() int64 {
	if x != nil {
		return x.MarketCapUsd
	}
	return 0
}

func (x *StatModifyRequest) GetPrice() *Price {
	if x != nil {
		return x.Price
	}
	return nil
}

func (x *StatModifyRequest) GetVolume() *Volume {
	if x != nil {
		return x.Volume
	}
	return nil
}

func (x *StatModifyRequest) GetShares() *Share {
	if x != nil {
		return x.Shares
	}
	return nil
}

func (x *StatModifyRequest) GetDividends() *Dividend {
	if x != nil {
		return x.Dividends
	}
	return nil
}

func (x *StatModifyRequest) GetBeta5Y() float32 {
	if x != nil {
		return x.Beta5Y
	}
	return 0
}

type StatDeleteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tickers   []string `protobuf:"bytes,1,rep,name=tickers,proto3" json:"tickers,omitempty"`
	Exchanges []string `protobuf:"bytes,2,rep,name=exchanges,proto3" json:"exchanges,omitempty"`
}

func (x *StatDeleteRequest) Reset() {
	*x = StatDeleteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_stats_v1_stats_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatDeleteRequest) ProtoMessage() {}

func (x *StatDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_stats_v1_stats_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatDeleteRequest.ProtoReflect.Descriptor instead.
func (*StatDeleteRequest) Descriptor() ([]byte, []int) {
	return file_proto_stats_v1_stats_proto_rawDescGZIP(), []int{6}
}

func (x *StatDeleteRequest) GetTickers() []string {
	if x != nil {
		return x.Tickers
	}
	return nil
}

func (x *StatDeleteRequest) GetExchanges() []string {
	if x != nil {
		return x.Exchanges
	}
	return nil
}

type StatReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ticker       string                 `protobuf:"bytes,1,opt,name=ticker,proto3" json:"ticker,omitempty"`
	Exchange     string                 `protobuf:"bytes,2,opt,name=exchange,proto3" json:"exchange,omitempty"`
	MarketCapUsd int64                  `protobuf:"varint,3,opt,name=marketCapUsd,proto3" json:"marketCapUsd,omitempty"`
	Price        *Price                 `protobuf:"bytes,4,opt,name=price,proto3" json:"price,omitempty"`
	Volume       *Volume                `protobuf:"bytes,5,opt,name=volume,proto3" json:"volume,omitempty"`
	Shares       *Share                 `protobuf:"bytes,6,opt,name=shares,proto3" json:"shares,omitempty"`
	Dividends    *Dividend              `protobuf:"bytes,7,opt,name=dividends,proto3" json:"dividends,omitempty"`
	Beta5Y       float32                `protobuf:"fixed32,8,opt,name=beta5y,proto3" json:"beta5y,omitempty"`
	CreatedAt    *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt    *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *StatReply) Reset() {
	*x = StatReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_stats_v1_stats_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatReply) ProtoMessage() {}

func (x *StatReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_stats_v1_stats_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatReply.ProtoReflect.Descriptor instead.
func (*StatReply) Descriptor() ([]byte, []int) {
	return file_proto_stats_v1_stats_proto_rawDescGZIP(), []int{7}
}

func (x *StatReply) GetTicker() string {
	if x != nil {
		return x.Ticker
	}
	return ""
}

func (x *StatReply) GetExchange() string {
	if x != nil {
		return x.Exchange
	}
	return ""
}

func (x *StatReply) GetMarketCapUsd() int64 {
	if x != nil {
		return x.MarketCapUsd
	}
	return 0
}

func (x *StatReply) GetPrice() *Price {
	if x != nil {
		return x.Price
	}
	return nil
}

func (x *StatReply) GetVolume() *Volume {
	if x != nil {
		return x.Volume
	}
	return nil
}

func (x *StatReply) GetShares() *Share {
	if x != nil {
		return x.Shares
	}
	return nil
}

func (x *StatReply) GetDividends() *Dividend {
	if x != nil {
		return x.Dividends
	}
	return nil
}

func (x *StatReply) GetBeta5Y() float32 {
	if x != nil {
		return x.Beta5Y
	}
	return 0
}

func (x *StatReply) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *StatReply) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type StatDelete struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *StatDelete) Reset() {
	*x = StatDelete{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_stats_v1_stats_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatDelete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatDelete) ProtoMessage() {}

func (x *StatDelete) ProtoReflect() protoreflect.Message {
	mi := &file_proto_stats_v1_stats_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatDelete.ProtoReflect.Descriptor instead.
func (*StatDelete) Descriptor() ([]byte, []int) {
	return file_proto_stats_v1_stats_proto_rawDescGZIP(), []int{8}
}

func (x *StatDelete) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

var File_proto_stats_v1_stats_proto protoreflect.FileDescriptor

var file_proto_stats_v1_stats_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2f, 0x76, 0x31,
	0x2f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x74,
	0x61, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61,
	0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x7a,
	0x0a, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x6c, 0x61, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6d,
	0x61, 0x78, 0x5f, 0x61, 0x6e, 0x6e, 0x75, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x09, 0x6d, 0x61, 0x78, 0x41, 0x6e, 0x6e, 0x75, 0x61, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x69,
	0x6e, 0x5f, 0x61, 0x6e, 0x6e, 0x75, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09,
	0x6d, 0x69, 0x6e, 0x41, 0x6e, 0x6e, 0x75, 0x61, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x74,
	0x75, 0x72, 0x6e, 0x5f, 0x79, 0x65, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a,
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x59, 0x65, 0x61, 0x72, 0x22, 0x76, 0x0a, 0x06, 0x56, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x04, 0x6c, 0x61, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x31, 0x30, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x76, 0x6f, 0x6c,
	0x75, 0x6d, 0x65, 0x31, 0x30, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x33, 0x30, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x76, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x33, 0x30, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x39, 0x30,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x39,
	0x30, 0x64, 0x22, 0x36, 0x0a, 0x08, 0x44, 0x69, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x79, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x79,
	0x69, 0x65, 0x6c, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x2f, 0x0a, 0x05, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6f, 0x75, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x03, 0x6f, 0x75, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x66, 0x6c, 0x6f, 0x61, 0x74, 0x22, 0x57, 0x0a, 0x0b, 0x53,
	0x74, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x06, 0x74, 0x69,
	0x63, 0x6b, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72,
	0x04, 0x10, 0x01, 0x18, 0x08, 0x52, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x12, 0x25, 0x0a,
	0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x01, 0x18, 0x08, 0x52, 0x08, 0x65, 0x78, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x22, 0xc5, 0x02, 0x0a, 0x11, 0x53, 0x74, 0x61, 0x74, 0x4d, 0x6f, 0x64,
	0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x06, 0x74, 0x69,
	0x63, 0x6b, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06, 0x72,
	0x04, 0x10, 0x01, 0x18, 0x10, 0x52, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x12, 0x25, 0x0a,
	0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x01, 0x18, 0x08, 0x52, 0x08, 0x65, 0x78, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x43, 0x61,
	0x70, 0x55, 0x73, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x43, 0x61, 0x70, 0x55, 0x73, 0x64, 0x12, 0x25, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x28, 0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x6c, 0x75, 0x6d,
	0x65, 0x52, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x06, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x74, 0x61, 0x74,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x06, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x73, 0x12, 0x30, 0x0a, 0x09, 0x64, 0x69, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x64, 0x73, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x69, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x64, 0x52, 0x09, 0x64, 0x69, 0x76, 0x69, 0x64,
	0x65, 0x6e, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x65, 0x74, 0x61, 0x35, 0x79, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x62, 0x65, 0x74, 0x61, 0x35, 0x79, 0x22, 0x6f, 0x0a, 0x11,
	0x53, 0x74, 0x61, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2a, 0x0a, 0x07, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x42, 0x10, 0xfa, 0x42, 0x05, 0x92, 0x01, 0x02, 0x08, 0x00, 0xfa, 0x42, 0x05, 0x92,
	0x01, 0x02, 0x18, 0x01, 0x52, 0x07, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x73, 0x12, 0x2e, 0x0a,
	0x09, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x42, 0x10, 0xfa, 0x42, 0x05, 0x92, 0x01, 0x02, 0x08, 0x00, 0xfa, 0x42, 0x05, 0x92, 0x01, 0x02,
	0x18, 0x01, 0x52, 0x09, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x22, 0xb3, 0x03,
	0x0a, 0x09, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x21, 0x0a, 0x06, 0x74,
	0x69, 0x63, 0x6b, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xfa, 0x42, 0x06,
	0x72, 0x04, 0x10, 0x01, 0x18, 0x10, 0x52, 0x06, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x12, 0x25,
	0x0a, 0x08, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x09, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x01, 0x18, 0x08, 0x52, 0x08, 0x65, 0x78, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x43,
	0x61, 0x70, 0x55, 0x73, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6d, 0x61, 0x72,
	0x6b, 0x65, 0x74, 0x43, 0x61, 0x70, 0x55, 0x73, 0x64, 0x12, 0x25, 0x0a, 0x05, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x28, 0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x52, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x06, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x74, 0x61,
	0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x52, 0x06, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x73, 0x12, 0x30, 0x0a, 0x09, 0x64, 0x69, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x64, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x69, 0x76, 0x69, 0x64, 0x65, 0x6e, 0x64, 0x52, 0x09, 0x64, 0x69, 0x76, 0x69,
	0x64, 0x65, 0x6e, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x65, 0x74, 0x61, 0x35, 0x79, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x62, 0x65, 0x74, 0x61, 0x35, 0x79, 0x12, 0x39, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x22, 0x22, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x32, 0xe9, 0x02, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x74,
	0x73, 0x12, 0x58, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x15, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x13, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x12, 0x1d, 0x2f, 0x76,
	0x31, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2f, 0x7b, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x7d, 0x2f, 0x7b, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x7d, 0x12, 0x50, 0x0a, 0x06, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x13, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x14, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0e, 0x22,
	0x09, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x64, 0x0a,
	0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x28, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x22, 0x1a, 0x1d, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2f, 0x7b, 0x65, 0x78,
	0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x7d, 0x2f, 0x7b, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x7d,
	0x3a, 0x01, 0x2a, 0x12, 0x4e, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1b, 0x2e,
	0x73, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x73, 0x74, 0x61,
	0x74, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x22, 0x11, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0b, 0x2a, 0x09, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74,
	0x61, 0x74, 0x73, 0x42, 0x8b, 0x03, 0x0a, 0x17, 0x64, 0x65, 0x76, 0x2e, 0x6b, 0x72, 0x61, 0x74,
	0x6f, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x42,
	0x0f, 0x41, 0x50, 0x49, 0x53, 0x74, 0x61, 0x74, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x56, 0x31,
	0x50, 0x01, 0x5a, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61,
	0x72, 0x6b, 0x74, 0x6f, 0x73, 0x2d, 0x76, 0x65, 0x6e, 0x74, 0x75, 0x72, 0x65, 0x2f, 0x62, 0x75,
	0x66, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x73, 0x2f, 0x76, 0x31,
	0x3b, 0x73, 0x74, 0x61, 0x74, 0x73, 0x5f, 0x76, 0x31, 0x92, 0x41, 0xa4, 0x02, 0x12, 0x90, 0x01,
	0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x73, 0x20, 0x41, 0x50, 0x49, 0x73, 0x12, 0x1f, 0x53, 0x74,
	0x61, 0x74, 0x73, 0x20, 0x41, 0x50, 0x49, 0x73, 0x20, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62,
	0x6c, 0x65, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x74, 0x72, 0x61, 0x64, 0x65, 0x73, 0x22, 0x5c, 0x0a,
	0x16, 0x41, 0x72, 0x6b, 0x74, 0x6f, 0x73, 0x20, 0x56, 0x65, 0x6e, 0x74, 0x75, 0x72, 0x65, 0x20,
	0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x25, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f,
	0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x72, 0x6b, 0x74,
	0x6f, 0x73, 0x2d, 0x76, 0x65, 0x6e, 0x74, 0x75, 0x72, 0x65, 0x2f, 0x62, 0x75, 0x66, 0x1a, 0x1b,
	0x6f, 0x73, 0x73, 0x40, 0x61, 0x72, 0x6b, 0x74, 0x6f, 0x73, 0x2d, 0x63, 0x6f, 0x6e, 0x73, 0x75,
	0x6c, 0x74, 0x69, 0x6e, 0x67, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x32, 0x03, 0x31, 0x2e, 0x30,
	0x2a, 0x02, 0x01, 0x02, 0x32, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x5a, 0x59, 0x0a, 0x57, 0x0a, 0x06, 0x62, 0x65,
	0x61, 0x72, 0x65, 0x72, 0x12, 0x4d, 0x08, 0x02, 0x12, 0x38, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e,
	0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2c, 0x20,
	0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x65, 0x64, 0x20, 0x62, 0x79, 0x20, 0x42, 0x65, 0x61, 0x72,
	0x65, 0x72, 0x3a, 0x20, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x20, 0x3c, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x3e, 0x1a, 0x0d, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x20, 0x02, 0x62, 0x0c, 0x0a, 0x0a, 0x0a, 0x06, 0x62, 0x65, 0x61, 0x72, 0x65, 0x72, 0x12,
	0x00, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_stats_v1_stats_proto_rawDescOnce sync.Once
	file_proto_stats_v1_stats_proto_rawDescData = file_proto_stats_v1_stats_proto_rawDesc
)

func file_proto_stats_v1_stats_proto_rawDescGZIP() []byte {
	file_proto_stats_v1_stats_proto_rawDescOnce.Do(func() {
		file_proto_stats_v1_stats_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_stats_v1_stats_proto_rawDescData)
	})
	return file_proto_stats_v1_stats_proto_rawDescData
}

var file_proto_stats_v1_stats_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_proto_stats_v1_stats_proto_goTypes = []interface{}{
	(*Price)(nil),                 // 0: stats.v1.Price
	(*Volume)(nil),                // 1: stats.v1.Volume
	(*Dividend)(nil),              // 2: stats.v1.Dividend
	(*Share)(nil),                 // 3: stats.v1.Share
	(*StatRequest)(nil),           // 4: stats.v1.StatRequest
	(*StatModifyRequest)(nil),     // 5: stats.v1.StatModifyRequest
	(*StatDeleteRequest)(nil),     // 6: stats.v1.StatDeleteRequest
	(*StatReply)(nil),             // 7: stats.v1.StatReply
	(*StatDelete)(nil),            // 8: stats.v1.StatDelete
	(*timestamppb.Timestamp)(nil), // 9: google.protobuf.Timestamp
}
var file_proto_stats_v1_stats_proto_depIdxs = []int32{
	0,  // 0: stats.v1.StatModifyRequest.price:type_name -> stats.v1.Price
	1,  // 1: stats.v1.StatModifyRequest.volume:type_name -> stats.v1.Volume
	3,  // 2: stats.v1.StatModifyRequest.shares:type_name -> stats.v1.Share
	2,  // 3: stats.v1.StatModifyRequest.dividends:type_name -> stats.v1.Dividend
	0,  // 4: stats.v1.StatReply.price:type_name -> stats.v1.Price
	1,  // 5: stats.v1.StatReply.volume:type_name -> stats.v1.Volume
	3,  // 6: stats.v1.StatReply.shares:type_name -> stats.v1.Share
	2,  // 7: stats.v1.StatReply.dividends:type_name -> stats.v1.Dividend
	9,  // 8: stats.v1.StatReply.created_at:type_name -> google.protobuf.Timestamp
	9,  // 9: stats.v1.StatReply.updated_at:type_name -> google.protobuf.Timestamp
	4,  // 10: stats.v1.Stats.Get:input_type -> stats.v1.StatRequest
	5,  // 11: stats.v1.Stats.Create:input_type -> stats.v1.StatModifyRequest
	5,  // 12: stats.v1.Stats.Update:input_type -> stats.v1.StatModifyRequest
	6,  // 13: stats.v1.Stats.Delete:input_type -> stats.v1.StatDeleteRequest
	7,  // 14: stats.v1.Stats.Get:output_type -> stats.v1.StatReply
	7,  // 15: stats.v1.Stats.Create:output_type -> stats.v1.StatReply
	7,  // 16: stats.v1.Stats.Update:output_type -> stats.v1.StatReply
	8,  // 17: stats.v1.Stats.Delete:output_type -> stats.v1.StatDelete
	14, // [14:18] is the sub-list for method output_type
	10, // [10:14] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_proto_stats_v1_stats_proto_init() }
func file_proto_stats_v1_stats_proto_init() {
	if File_proto_stats_v1_stats_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_stats_v1_stats_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Price); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_stats_v1_stats_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Volume); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_stats_v1_stats_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Dividend); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_stats_v1_stats_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Share); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_stats_v1_stats_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_stats_v1_stats_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatModifyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_stats_v1_stats_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatDeleteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_stats_v1_stats_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_stats_v1_stats_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatDelete); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_stats_v1_stats_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_stats_v1_stats_proto_goTypes,
		DependencyIndexes: file_proto_stats_v1_stats_proto_depIdxs,
		MessageInfos:      file_proto_stats_v1_stats_proto_msgTypes,
	}.Build()
	File_proto_stats_v1_stats_proto = out.File
	file_proto_stats_v1_stats_proto_rawDesc = nil
	file_proto_stats_v1_stats_proto_goTypes = nil
	file_proto_stats_v1_stats_proto_depIdxs = nil
}
