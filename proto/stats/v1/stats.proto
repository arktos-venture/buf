syntax = "proto3";

package stats.v1;

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "validate/validate.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "proto/screener/v1/screener.proto";
import "proto/quotes/v1/quotes.proto";

option go_package = "github.com/arktos-venture/buf/proto/stats/v1;v1Stats";
option java_multiple_files = true;
option java_package = "dev.kratos.api.stats.v1";
option java_outer_classname = "APIStatsProtoV1";
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
	info: {
        title: "Stats APIs";
		description: "Stats APIs";
        version: "1.0";
		contact: {
			name: "Arktos Venture project";
			url: "https://github.com/arktos-venture/buf";
			email: "oss@arktos-consulting.cloud";
		};
  	};
	schemes: [HTTP, HTTPS];
	consumes: "application/json";
	produces: "application/json";
	security_definitions: {
	  	security: {
			key: "bearer"
			value: {
		  		type: TYPE_API_KEY
		  		in: IN_HEADER
		  		name: "Authorization"
		  		description: "Authentication token, prefixed by Bearer: Bearer <token>"
			}
	  	}
	}
	security: {
	  	security_requirement: {
			key: "bearer"
	  	}
	}
};

service Stats {
	// Public API
	// Get Stat properties
	rpc Last (quotes.v1.QuoteLastRequest) returns (StatReply)  {
		option (google.api.http) = {
		  	get: "/v1/stats/{exchange}/{ticker}"
		};
	}

	// Private API
	// Update properties of Stat
	rpc Update (StatUpdateRequest) returns (StatReply)  {
		option (google.api.http) = {
			put: "/v1/stats/{exchange}/{ticker}"
			body: "*"
		};
	}

	// Private API
	// Delete Stat
	rpc Delete (quotes.v1.QuoteDeleteRequest) returns (StatDelete)  {
		option (google.api.http) = {
		  	delete: "/v1/stats"
		};
	}
}

message Price {
	float max_annual = 1;
	float min_annual = 2;
	float return_year = 3;
	int64 market_cap_usd = 4;
	float beta5y = 5;
	float start = 6;
}
	
message Volume {
	int64 volumeAvg10d = 1;
	int64 volumeAvg30d = 2;
	int64 volumeAvg90d = 3;
}


// 
// Request
// 

message StatRequest {
	screener.v1.TSDB tsdb = 1;
	string ticker = 2;
	string exchange = 3;
}

message StatUpdateRequest {
	message Data {
		Price price = 1;
		Volume volume = 2;
	}

	screener.v1.TSDB tsdb = 1;
	string ticker = 2;
	string exchange = 3;
	Data data = 4;
}

message StatDeleteRequest {
	screener.v1.TSDB tsdb = 1;
	repeated string tickers = 2 [(validate.rules).repeated.min_items = 0, (validate.rules).repeated.unique = true];
	repeated string exchanges = 3 [(validate.rules).repeated.min_items = 0, (validate.rules).repeated.unique = true];
}


// 
// Reply
// 

message StatReply {
	string ticker = 1;
	string exchange = 2;
	Price price = 4;
	Volume volume = 5;
	google.protobuf.Timestamp created_at = 7;
	google.protobuf.Timestamp updated_at = 8; 
}

message StatDelete {
	int64 total = 1;
}