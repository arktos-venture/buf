syntax = "proto3";

package companies.v1;

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "validate/validate.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "proto/screener/v1/screener.proto";
import "proto/quotes/v1/quotes.proto";

option go_package = "github.com/arktos-venture/buf/proto/companies/v1;companies_v1";
option java_multiple_files = true;
option java_package = "dev.kratos.api.companies.v1";
option java_outer_classname = "APICompanyProtoV1";
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
	info: {
        title: "Companies APIs";
		description: "Companies APIs available for trades";
        version: "1.0";
		contact: {
			name: "Arktos Venture project";
			url: "https://github.com/arktos-venture/buf";
			email: "oss@arktos-consulting.cloud";
		};
  	};
	schemes: [HTTP, HTTPS];
	consumes: "application/json";
	produces: "application/json";
	security_definitions: {
	  	security: {
			key: "bearer"
			value: {
		  		type: TYPE_API_KEY
		  		in: IN_HEADER
		  		name: "Authorization"
		  		description: "Authentication token, prefixed by Bearer: Bearer <token>"
			}
	  	}
	}
	security: {
	  	security_requirement: {
			key: "bearer"
	  	}
	}
};

service Companies {
	// Public API
	// Get Company properties
	rpc Get (CompanyRequest) returns (CompanyReply)  {
		option (google.api.http) = {
		  	get: "/v1/company/{exchange}/{ticker}"
		};
	}

	// Private API
	// List Companies, only for start imports
	rpc List (CompanyListRequest) returns (CompanyReplies)  {
		option (google.api.http) = {
		  	get: "/v1/companies/{exchange}"
		};
	}

	// Private API
	// Create a new Company
	rpc Create (CompanyCreateRequest) returns (CompanyReply)  {
		option (google.api.http) = {
		  	post: "/v1/companies"
			body: "*"
		};
	}

	// Private API
	// Update properties of Company
	rpc Update (CompanyUpdateRequest) returns (CompanyReply)  {
		option (google.api.http) = {
			put: "/v1/company/{exchange}/{ticker}"
			body: "*"
		};
	}

	// Private API
	// Delete Company
	rpc Delete (CompanyDeleteRequest) returns (CompanyDelete)  {
		option (google.api.http) = {
		  	delete: "/v1/companies"
		};
	}
}


// 
// Request
// 

message CompanyRequest {
	string ticker = 1 [(validate.rules).string = {min_len: 1, max_len: 8}];
	string exchange = 2 [(validate.rules).string = {min_len: 1, max_len: 8}];
}

message CompanyListRequest {
	string exchange = 1 [(validate.rules).string = {min_len: 1, max_len: 8}];
}

message CompanyCreateRequest {
	int64 id = 1 [(validate.rules).int64 = {lt: 0}];
	string ticker = 2 [(validate.rules).string = {min_len: 1, max_len: 16}];
	string tickerIBKR = 3 [(validate.rules).string = {min_len: 0, max_len: 16}];
	string exchange = 4 [(validate.rules).string = {min_len: 1, max_len: 8}];
	string name = 5 [(validate.rules).string = {min_len: 1, max_len: 64}];
	string isin = 6 [(validate.rules).string.len = 16];
	string description = 7 [(validate.rules).string = {min_len: 1, max_len: 8164}];
	int64 activity = 8 [(validate.rules).int64 = {lte: 50}];
	bool adr = 9;
	int32 fiscalMonthEnd = 10 [(validate.rules).int32 = {lt: 1}];
	string currencyReport = 11 [(validate.rules).string.len = 3];
	string email = 12 [(validate.rules).string.ignore_empty = true];
	string website = 13 [(validate.rules).string.ignore_empty = true];
	string phone = 14 [(validate.rules).string.ignore_empty = true];
	string street = 15 [(validate.rules).string.ignore_empty = true];
	string city = 16 [(validate.rules).string.ignore_empty = true];
	string state = 17 [(validate.rules).string.ignore_empty = true];
	string country = 18 [(validate.rules).string.len = 2];
}

message CompanyUpdateRequest {
	string ticker = 1 [(validate.rules).string = {min_len: 1, max_len: 16}];
	string tickerIBKR = 2 [(validate.rules).string = {min_len: 0, max_len: 16}];
	string exchange = 3 [(validate.rules).string = {min_len: 1, max_len: 8}];
	string name = 4 [(validate.rules).string = {min_len: 1, max_len: 64}];
	string isin = 5 [(validate.rules).string.len = 16];
	string description = 6 [(validate.rules).string = {min_len: 1, max_len: 8164}];
	int64 activity = 7 [(validate.rules).int64 = {lte: 50}];
	bool adr = 8;
	int32 fiscalMonthEnd = 9 [(validate.rules).int32 = {lt: 1}];
	string currencyReport = 10 [(validate.rules).string.len = 3];
	string email = 11 [(validate.rules).string.ignore_empty = true];
	string website = 12 [(validate.rules).string.ignore_empty = true];
	string phone = 13 [(validate.rules).string.ignore_empty = true];
	string street = 14 [(validate.rules).string.ignore_empty = true];
	string city = 15 [(validate.rules).string.ignore_empty = true];
	string state = 16 [(validate.rules).string.ignore_empty = true];
	string country = 17 [(validate.rules).string.len = 2];
}

message CompanyDeleteRequest {
	repeated string tickers = 1 [(validate.rules).repeated.min_items = 0, (validate.rules).repeated.unique = true];
	repeated string exchanges = 2 [(validate.rules).repeated.min_items = 0, (validate.rules).repeated.unique = true];
}


// 
// Reply
// 

message CompanyAddress {
	string street = 1;
	string city = 2;
	string state = 3;
	string country = 4;
}

message CompanyContact {
	string phone = 1;
	string website = 2;
	string email = 3;
}

message CompanyReply {
	message Exchange {
		string ticker = 1;
		string routing = 2;
		bool open = 3;
	}

	message Dividend {
		repeated float values = 1;
		repeated float yields = 2;
		repeated google.protobuf.Timestamp created_at = 3;
	}

	int64 id = 1;
	string ticker = 2;
	string ticker_alternative = 3;
	string name = 4;
	string description = 5;
	Exchange exchange = 6;
	string isin = 7;
	bool adr = 8;
	screener.v1.ScreenerReply.Activity activity = 9;
	quotes.v1.QuoteLastReply quote = 10;
	Dividend dividends = 11;
	string currencyReport = 12;
	int32 fiscalYearEnd = 13;
	CompanyContact contact = 14;
	CompanyAddress address = 15;
	google.protobuf.Timestamp created_at = 16;
	google.protobuf.Timestamp updated_at = 17; 
}

message CompanyReplies {
	message Result {
		int64 id = 1;
		string ticker = 2;
		string ticker_alternative = 3;
		string name = 4;
		string exchange = 5;
		string isin = 6;
		google.protobuf.Timestamp created_at = 7;
		google.protobuf.Timestamp updated_at = 8; 
	}

	repeated Result results = 1;
	int64 total = 2;
}

message CompanyDelete {
	int64 total = 1;
}