syntax = "proto3";

package companies.v1;

import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "validate/validate.proto";

option go_package = "grpc-api/api/companies/v1;v1";
option java_multiple_files = true;
option java_package = "dev.kratos.api.companies.v1";
option java_outer_classname = "CompanyProtoV1";

service Companies {
	// Public API
	rpc Get (CompanyRequest) returns (CompanyReply)  {
		option (google.api.http) = {
		  	get: "/v1/company/{exchange}/{ticker}"
		};
	}

	// Public API
	rpc Stats (CompanyRequest) returns (CompanyStatsReply)  {
		option (google.api.http) = {
		  	get: "/v1/company/{exchange}/{ticker}/stats"
		};
	}

	// Public API
	rpc Similars (CompanyRequest) returns (CompanySimilarsReply)  {
		option (google.api.http) = {
		  	get: "/v1/company/{exchange}/{ticker}/similars"
		};
	}

	// Private API
	rpc Health (google.protobuf.Empty) returns (google.protobuf.Empty)  {
		option (google.api.http) = {
			get: "/healthz"
		};
	}
}


// 
// Request
// 

message CompanyRequest {
	string ticker = 1 [(validate.rules).string = {min_len: 1, max_len: 8}];
	string exchange = 2 [(validate.rules).string = {min_len: 1, max_len: 8}];
}

message CompanyAddress {
	string street = 1;
	string city = 2;
	string state = 3;
	string country = 4;
}

message CompanyContact {
	string phone = 1;
	string website = 2;
	string email = 3;
}


// 
// Reply
// 

message CompanyReply {
	message Activity {
		int64 economicSector = 1; 
		int64 businessSector = 2;
		int64 industryGroup = 3;
		int64 industry = 4;
		int64 activity = 5;
	}

	message Shares {
		int64 outstanding = 1;
		int64 float = 2;
	}

	int64 id = 1;
	string ticker = 2;
	string ticker_alternative = 3;
	string name = 4;
	string description = 5;
	string exchange = 6;
	string routing = 7;
	string isin = 8;
	int64 employees = 9; 
	Activity activity = 10;
	Shares shares = 11;
	string currencyReport = 12;
	int64 fiscalYearEnd = 13;
	CompanyContact contact = 14;
	CompanyAddress address = 15;
}

message CompanyStatsReply {
	message Shares {
		int64 outstanding = 1;
		int64 float = 2;
	}

	message Pricing {
		float last = 1;
		float minYear = 2;
		float maxYear = 3;
		float returnYear = 4;
		int64 marketcap = 5;
		float beta5y = 6;
	}

	message Volume {
		float last = 1;
		float avg10d = 2;
		float avg90d = 3;
		float share10dRatio = 4;
		float share90dRatio = 5;
	}

	message Dividends {
		float yield = 1;
		float annual = 2;
		float yieldAvg5y = 3;
	}

	Shares shares = 1;
	Pricing pricing = 2;
	Dividends dividends = 3;
	Volume volume = 4;
	google.protobuf.Timestamp date = 5; 
}

message CompanySimilarsReply {
	message Result {
		int64 id = 1;
		string ticker = 2;
		string ticker_alternative = 3;
		string name = 4;
		string exchange = 5;
		string isin = 6;
		int64 marketCap = 7;
	}

	repeated Result results = 1;
	int32 total = 2;
}